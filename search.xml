<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Rainy Knifes</title>
    <url>/2020/01/09/Rainy-Knifes/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/11.RainyKnifes.gif" alt="Rainy Knifes"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/GameDevLog/Rainy-Knifes</span></pre></td></tr></table></figure>

<ul>
<li>Project Settings &gt; General &gt; Display &gt; Window <ul>
<li>Size<ul>
<li>Width: <code>480</code></li>
<li>Height: <code>800</code></li>
</ul>
</li>
<li>Stretch<ul>
<li>Mode: <code>2d</code></li>
<li>Aspect: <code>keep</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="导入资源"><a href="#导入资源" class="headerlink" title="导入资源"></a>导入资源</h3><p>Scene</p>
<ul>
<li>Node: <code>Main</code><ul>
<li>Sprites: <code>Background</code></li>
<li>Node2D: <code>GroundParent</code><ul>
<li>Sprites: <code>ground</code> x 4</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Inspector</p>
<ul>
<li>Background &gt; Node2D &gt; Transform<ul>
<li>Position<ul>
<li>x: <code>241.067</code></li>
<li>y: <code>403.912</code></li>
</ul>
</li>
<li>Scale<ul>
<li>x: <code>0.67</code></li>
<li>y: <code>0.63</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="创建动画"><a href="#创建动画" class="headerlink" title="创建动画"></a>创建动画</h3><p>Scene</p>
<ul>
<li>Node2D: <code>Player</code><ul>
<li>Sprites: <code>Idle</code></li>
<li>AnimationPlayer: <code>IdleAnimation</code></li>
<li>Sprites: <code>Walk</code></li>
<li>AnimationPlayer: <code>WalkAnimation</code></li>
</ul>
</li>
</ul>
<p>Inspector</p>
<ul>
<li><p>Player &gt; Node2D &gt; Transform</p>
<ul>
<li>Position<ul>
<li>x: <code>240</code></li>
<li>y: <code>480</code></li>
</ul>
</li>
</ul>
</li>
<li><p>Idle</p>
<ul>
<li>Sprite &gt; Animation<ul>
<li>Hframes: <code>2</code></li>
</ul>
</li>
<li>Node2D &gt; Transform &gt; Scale<ul>
<li>x: <code>0.5</code></li>
<li>y: <code>0.5</code></li>
</ul>
</li>
</ul>
</li>
<li><p>WalkAnimation &gt; AnimationPlayer &gt; Playback Options</p>
<ul>
<li>Speed: <code>3</code></li>
</ul>
</li>
</ul>
<p>Animation</p>
<ul>
<li><p>New: <code>Idle</code></p>
<ul>
<li>Animation Length: <code>0.2</code></li>
<li>Current Pos.: <code>0</code></li>
</ul>
</li>
<li><p>Idle &gt; Sprite &gt; Animation</p>
<ul>
<li>Frame: <code>0</code> <strong>+</strong></li>
</ul>
</li>
<li><p>New: <code>Walk</code></p>
<ul>
<li>Animation Length: <code>1</code></li>
</ul>
</li>
</ul>
<h3 id="移动-Player"><a href="#移动-Player" class="headerlink" title="移动 Player"></a>移动 <code>Player</code></h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Godot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">Node2D</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> Sprite idleSprite;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">private</span> Sprite walkSprite;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> AnimationPlayer idleAnimation;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> AnimationPlayer walkAnimation;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    [<span class="meta">Export</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">float</span> moveSpeed = <span class="number">500f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> _Ready()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        idleSprite = GetNode&lt;Sprite&gt;(<span class="string">"Idle"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        walkSprite = GetNode&lt;Sprite&gt;(<span class="string">"Walk"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        idleAnimation = GetNode&lt;AnimationPlayer&gt;(<span class="string">"IdleAnimation"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        walkAnimation = GetNode&lt;AnimationPlayer&gt;(<span class="string">"WalkAnimation"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> _Process(<span class="keyword">float</span> delta)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">base</span>._Process(delta);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Input.IsActionPressed(<span class="string">"left"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Vector2 temp = Position;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            temp.x -= moveSpeed * delta;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Position = temp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.IsActionPressed(<span class="string">"right"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Vector2 temp = Position;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            temp.x += moveSpeed * delta;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Position = temp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="Scenes-amp-Prefabs"><a href="#Scenes-amp-Prefabs" class="headerlink" title="Scenes &amp; Prefabs"></a>Scenes &amp; Prefabs</h3><h3 id="生成刀"><a href="#生成刀" class="headerlink" title="生成刀"></a>生成刀</h3><p>Scene</p>
<ul>
<li>Node2D: <code>Knife</code><ul>
<li>Sprite: <code>Knife</code></li>
</ul>
</li>
</ul>
<p>Inspector</p>
<ul>
<li>Knife &gt; Node2D &gt; Transform<ul>
<li>Rotation Degree: <code>-90</code></li>
</ul>
</li>
</ul>
<p>Scene</p>
<ul>
<li>Main<ul>
<li>Position2D: <code>MinX</code></li>
<li>Position2D: <code>MaxX</code></li>
<li>Timer</li>
</ul>
</li>
</ul>
<p>Inspector</p>
<ul>
<li>MinX &gt; Node2D &gt; Transform &gt; Position<ul>
<li>x: <code>10</code></li>
<li>y: <code>-50</code></li>
</ul>
</li>
<li>MaxX &gt; Node2D &gt; Transform &gt; Position<ul>
<li>x: <code>470</code></li>
<li>y: <code>-50</code></li>
</ul>
</li>
<li>Timer &gt; Timer<ul>
<li>Wait Time: <code>0.7</code></li>
<li>Autostart: <code>True</code></li>
</ul>
</li>
</ul>
<h3 id="碰撞检测"><a href="#碰撞检测" class="headerlink" title="碰撞检测"></a>碰撞检测</h3><p>Inspector &gt; Node2D &gt; Z Index</p>
<ul>
<li><p>Z Index</p>
<ul>
<li>Background: <code>0</code></li>
<li>backg: <code>1</code></li>
<li>Player: <code>2</code></li>
<li>Knife: <code>3</code></li>
</ul>
</li>
<li><p>Knife</p>
<ul>
<li>Area2D</li>
</ul>
</li>
</ul>
<p>Node</p>
<ul>
<li>Groups &gt; Manage Groups &gt; Add<ul>
<li>Knife</li>
</ul>
</li>
</ul>
<p><code>Player.cs</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">Node2D</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">void</span> _OnCollisionEntered(Area2D area) &#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(area.IsInGroup(<span class="string">"Knife"</span>)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            gameplayScript.PlayerDied();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            QueueFree();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="重新开始"><a href="#重新开始" class="headerlink" title="重新开始"></a>重新开始</h3><p>Scene</p>
<ul>
<li>Main<ul>
<li>Timer: <code>RestartTimer</code></li>
</ul>
</li>
</ul>
<p><code>Main.cs</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Godot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Main</span> : <span class="title">Node</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    [<span class="meta">Export</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> PackedScene knifePrefab;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Position2D minX;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Position2D maxX;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Timer restartTimer;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> _Ready()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        minX = GetNode&lt;Position2D&gt;(<span class="string">"MinX"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        maxX = GetNode&lt;Position2D&gt;(<span class="string">"MaxX"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        restartTimer = GetNode&lt;Timer&gt;(<span class="string">"RestartTimer"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        restartTimer.Connect(<span class="string">"timeout"</span>, <span class="keyword">this</span>, <span class="string">"_OnRestartGame"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        restartTimer.WaitTime = <span class="number">2f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        restartTimer.OneShot = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> _OnTimerTimeout()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Knife knife = knifePrefab.Instance() <span class="keyword">as</span> Knife;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">float</span> x = (<span class="keyword">float</span>)GD.RandRange(minX.GetPosition().x, maxX.GetPosition().x);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        knife.Position = <span class="keyword">new</span> Vector2(x, minX.GetPosition().y);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        AddChild(knife);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> _OnRestartGame()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        GetTree().ReloadCurrentScene();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlayerDied</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        restartTimer.Start();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>参考：</p>
<ol>
<li><a href=""></a></li>
</ol>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
<p>找到游戏列表对应的 <a href="https://game.iosdevlog.com">GameDevLog</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>Coin Dash</title>
    <url>/2020/01/02/Coin-Dash/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/10.CoinDash.gif" alt="Coin Dash!"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><p>游戏开发是复杂的，涉及到各种各样的知识和技能。为了创造一款现代游戏，你需要大量的基础技术才能创造出真正的游戏。想象一下，在你开始编程之前，你必须建造自己的电脑，编写自己的操作系统。如果你真的需要从头开始并创造你所需要的一切，游戏开发将会非常类似于此。</p>
<p>此外，每个游戏都有一些共同的需求。例如，不管游戏是什么，它都需要在屏幕上绘制东西。如果要做这些的代码已经写好了，那么重用它比为每个游戏重新创建它更有意义。这就是游戏框架和引擎的用武之地。</p>
<p><code>游戏框架</code> 是一组带有辅助代码的库，帮助构建游戏的基本部分。它不一定提供所有的部分，而且您可能仍然需要编写大量的代码来将所有的部分联系在一起。因此，构建一个游戏需要从其他工具中导入内容，比如那些用于创建动画或3D模型的工具。</p>
<p>使用 <code>游戏引擎</code> 可以让开发者专注于构建他们的游戏，而不是创建所有需要的底层框架。对于小型或独立开发者来说，这可能意味着在一年而不是三年的开发后发行游戏，甚至是从未发行过游戏。<br>以下是游戏引擎提供的一些主要功能:</p>
<ul>
<li><code>渲染(2D和3D)</code>: 渲染是在玩家的屏幕上显示游戏的过程。一个好的渲染管道必须考虑到现代 GPU 的支持，高分辨率的显示，以及像灯光、透视和视口这样的效果，同时保持一个非常高的帧速率。</li>
<li><code>物理</code>: 虽然这是一个非常普遍的需求，但构建一个健壮而准确的物理引擎是一项艰巨的任务。大多数游戏都需要某种碰撞检测和响应系统，许多游戏都需要物理模拟，但很少有开发者愿意承担编写这样的游戏的任务，特别是如果他们曾经尝试过这样做的话。</li>
<li><code>平台支持</code>: 在今天的市场中，大多数开发者都希望能够在多个平台上发布他们的游戏，例如主机，手机，PC 和/或网络。游戏引擎提供了一个统一的导出过程，可以在多个平台上发布，而不需要重写游戏代码或支持多个版本。</li>
<li><code>通用开发环境</code>: 通过使用相同的统一界面制作多个游戏，你不必每次开始一个新项目时都重新学习一个新的工作流程。”</li>
</ul>
<p>此外，还会有一些工具来帮助你实现一些功能，比如联网、简化处理图像和声音、动画、调试、关卡创建等等。通常，游戏引擎将包括从其他工具(如用于创建动画或 3D模型的工具)导入内容的能力。</p>
<p>使用游戏引擎可以让开发者专注于构建他们的游戏，而不是创建所有的底层内容。</p>
<p>框架需要使它工作。对于小型或独立开发者来说，这可能意味着在一年而不是三年的开发后发行游戏，甚至是从未发行过游戏。</p>
<p>现在市场上有很多流行的游戏引擎，例如 <code>Unity, Unreal Engine, GameMaker Studio</code> 等等。需要注意的一个重要事实是，大多数流行的游戏引擎都是商业产品。他们可能需要或不需要任何财务投资来开始，但如果你的游戏赚钱，他们将需要一些许可和/或版税。无论您选择哪种引擎，您都需要仔细阅读用户协议，并确保您了解您是什么以及不允许您使用该引擎，以及您可能要承担的隐藏成本(如果有的话)。</p>
<p>另一方面，也有一些非商业性和开源的引擎，比如 <code>Godot</code> 游戏引擎。</p>
<h2 id="Godot"><a href="#Godot" class="headerlink" title="Godot"></a>Godot</h2><p>Godot 是一个功能齐全的现代游戏引擎，提供了上一节和更多内容中描述的所有功能。它也是完全免费和开源的，在非常宽松的 <code>MIT</code> 许可下发布。这意味着你的游戏没有费用，没有隐藏成本，也没有版税。你使用 Godot 所创造的一切都是属于你自己的，这与许多需要持续合同关系的商业游戏引擎不同。对于许多开发人员来说，这非常有吸引力。</p>
<p>如果您不熟悉开源、社区驱动开发的概念，那么您可能会觉得奇怪。然而，就像 Linux 内核、Firefox 浏览器和许多其他非常著名的软件一样，Godot 并不是由公司作为商业产品开发的。相反，热情的开发人员组成了一个专门的社区，贡献他们的时间和专业知识来构建引擎、测试和修复 bug、生成文档等等。</p>
<p>作为一名游戏开发者，使用 Godot 的好处是巨大的。因为它不受商业许可的限制，所以你可以完全控制游戏的发行方式和发行地点。许多商业游戏引擎都限制了你可以制作的项目类型，或者需要更昂贵的许可证才能在某些类别(如赌博)中制作游戏。</p>
<p>Godot 的开源特性也意味着它具有商业游戏引擎所不具备的透明度。例如，如果您发现某个特定的引擎特性不能完全满足您的需求，您可以自由地修改 <em>引擎本身并添加您需要的新特性，不需要任何权限</em>。这在调试大型项目时也非常有用，因为您可以完全访问引擎的内部工作。</p>
<h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p>节点是在 Godot 中创建游戏的基本构建块。 节点是可以代表各种专用游戏功能的对象。 给定类型的节点可能会显示图形，播放动画或表示对象的 3D 模型。 该节点还包含属性的集合，允许您自定义其行为。 您添加到项目中的哪些节点取决于所需的功能。 这是一个模块化系统，旨在为您提供构建游戏对象的灵活性。</p>
<p>在您的项目中，您添加的节点被组织成树状结构。 在树中，将节点添加为其他节点的子代。 一个特定的节点可以有任意数量的子节点，但只能有一个父节点。 将一组节点收集到树中时，它称为 <code>scene (场景)</code>，该树称为 <code>scenes(场景树)</code>：</p>
<h2 id="Coin-Dash-金币冲冲冲"><a href="#Coin-Dash-金币冲冲冲" class="headerlink" title="Coin Dash (金币冲冲冲)"></a>Coin Dash (金币冲冲冲)</h2><h3 id="Project-Setup"><a href="#Project-Setup" class="headerlink" title="Project Setup"></a>Project Setup</h3><ul>
<li>Project menu &gt; Project Settings<ul>
<li>Display<ul>
<li>Window<ul>
<li>Size<ul>
<li>Width: <code>480</code></li>
<li>Height: <code>720</code></li>
</ul>
</li>
</ul>
</li>
<li>Stretch<ul>
<li>Mode: <code>2d</code></li>
<li>Aspect: <code>keep</code></li>
</ul>
</li>
</ul>
</li>
<li>Rendering<ul>
<li>Quality<ul>
<li>2d<ul>
<li>Use Pixel Snap: <code>On</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Player-Scene"><a href="#Player-Scene" class="headerlink" title="Player Scene"></a>Player Scene</h3><ul>
<li>Scene<ul>
<li>Area2D: <code>Player</code> &amp; <code>not selectable</code><ul>
<li>AnimatedSprite</li>
<li>CollisionShape2D</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>AnimatedSprite<ul>
<li>Frames: <code>New SpriteFrames</code><ul>
<li>Animations<ul>
<li>hurt</li>
<li>idle</li>
<li>run</li>
</ul>
</li>
<li>Speed(FPS):<ul>
<li>8</li>
</ul>
</li>
</ul>
</li>
<li>Playing<ul>
<li>On: <code>true</code></li>
</ul>
</li>
<li>Offset<ul>
<li>x: <code>0</code></li>
<li>y: <code>-5</code></li>
</ul>
</li>
<li>Scale<ul>
<li>x: <code>3</code></li>
<li>y: <code>3</code></li>
</ul>
</li>
</ul>
</li>
<li>CollisionShape2D<ul>
<li>Shape<ul>
<li>RectangleShape2D</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<ul>
<li>Player<ul>
<li>Script: <code>Player.cs</code></li>
</ul>
</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Godot;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">Area2D</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// How fast the player will move (pixels/sec).</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    [<span class="meta">Export</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> Speed = <span class="number">400</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// Size of the game window.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Vector2 screenSize;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// The player's movement vector.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Vector2 velocity;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> _Ready()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        screenSize = GetViewport().GetSize();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> _Process(<span class="keyword">float</span> delta)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        _GetInput();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        Position += velocity * delta;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        Position = <span class="keyword">new</span> Vector2(</span></pre></td></tr><tr><td class="code"><pre><span class="line">            x: Mathf.Clamp(Position.x, <span class="number">0</span>, screenSize.x),</span></pre></td></tr><tr><td class="code"><pre><span class="line">            y: Mathf.Clamp(Position.y, <span class="number">0</span>, screenSize.y)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        );</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">var</span> animatedSprite = GetNode&lt;AnimatedSprite&gt;(<span class="string">"AnimatedSprite"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (velocity.Length() &gt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            animatedSprite.Animation = <span class="string">"run"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            animatedSprite.FlipH = velocity.x &lt; <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            animatedSprite.Animation = <span class="string">"idle"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> _GetInput()</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        velocity = <span class="keyword">new</span> Vector2();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Input.IsActionPressed(<span class="string">"ui_right"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            velocity.x += <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Input.IsActionPressed(<span class="string">"ui_left"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            velocity.x -= <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Input.IsActionPressed(<span class="string">"ui_down"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            velocity.y += <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Input.IsActionPressed(<span class="string">"ui_up"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            velocity.y -= <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (velocity.Length() &gt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            velocity = velocity.Normalized() * Speed;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><strong>未完待续</strong></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>参考：</p>
<ol>
<li><a href="https://github.com/PacktPublishing/Godot-Game-Engine-Projects" target="_blank" rel="noopener">Godot Game Engine Projects</a></li>
</ol>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
<p>找到游戏列表对应的 <a href="https://game.iosdevlog.com">GameDevLog</a></p>
]]></content>
      <categories>
        <category>Godot</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>Box2D</title>
    <url>/2019/12/24/Box2D/</url>
    <content><![CDATA[<h2 id="Box2D-官网"><a href="#Box2D-官网" class="headerlink" title="Box2D 官网"></a>Box2D 官网</h2><img src="/2019/12/24/Box2D/Box2D.png" class="" title="http:&#x2F;&#x2F;box2d.org">

<a id="more"></a>

<h2 id="Box2D-安装"><a href="#Box2D-安装" class="headerlink" title="Box2D 安装"></a>Box2D 安装</h2><h3 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h3><p><a href="https://box2d.org/downloads/" target="_blank" rel="noopener">https://box2d.org/downloads/</a></p>
<img src="/2019/12/24/Box2D/Box2D_Download.png" class="" title="Box2D_Download">

<h3 id="Box2D-GitHub-源码"><a href="#Box2D-GitHub-源码" class="headerlink" title="Box2D GitHub 源码"></a>Box2D GitHub 源码</h3><p><a href="https://github.com/erincatto/Box2D/" target="_blank" rel="noopener">https://github.com/erincatto/Box2D/</a></p>
<img src="/2019/12/24/Box2D/Box2D_GitHub.png" class="" title="Box2D_GitHub">

<h3 id="Building"><a href="#Building" class="headerlink" title="Building"></a>Building</h3><p><a href="https://github.com/erincatto/Box2D/blob/master/Building.md" target="_blank" rel="noopener">https://github.com/erincatto/Box2D/blob/master/Building.md</a></p>
<img src="/2019/12/24/Box2D/Box2D_Build.png" class="" title="Box2D_Build">

<h3 id="premake5"><a href="#premake5" class="headerlink" title="premake5"></a>premake5</h3><p><a href="https://premake.github.io" target="_blank" rel="noopener">https://premake.github.io</a></p>
<img src="/2019/12/24/Box2D/Premake.png" class="" title="Premake">

<h4 id="Version-5-0-alpha"><a href="#Version-5-0-alpha" class="headerlink" title="Version 5.0 (alpha)"></a>Version 5.0 (alpha)</h4><p><a href="https://premake.github.io/download.html#v5" target="_blank" rel="noopener">https://premake.github.io/download.html#v5</a></p>
<img src="/2019/12/24/Box2D/Premake_Download.png" class="" title="Premake_Download">

<p>查看帮助</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">premake5 --help</span></pre></td></tr><tr><td class="code"><pre><span class="line">...</span></pre></td></tr><tr><td class="code"><pre><span class="line">ACTIONS</span></pre></td></tr><tr><td class="code"><pre><span class="line"> vs2019            Generate Visual Studio 2019 project files</span></pre></td></tr><tr><td class="code"><pre><span class="line"> xcode4            Generate Apple Xcode 4 project files</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">For additional information, see https:&#x2F;&#x2F;premake.github.io</span></pre></td></tr></table></figure>

<h3 id="Box2D-master"><a href="#Box2D-master" class="headerlink" title="Box2D master"></a>Box2D master</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">premake5 xcode4</span></pre></td></tr></table></figure>

<p>下载：<a href="https://github.com/erincatto/Box2D/archive/master.zip" target="_blank" rel="noopener">https://github.com/erincatto/Box2D/archive/master.zip</a></p>
<img src="/2019/12/24/Box2D/Box2D_master.png" class="" title="Box2D_master">

<h3 id="生成-Xcode-项目"><a href="#生成-Xcode-项目" class="headerlink" title="生成 Xcode 项目"></a>生成 Xcode 项目</h3><p>Here are the steps for Xcode:</p>
<ul>
<li>Command line: <code>premake5 xcode4</code></li>
<li>Open the resulting project file (should be <em>Build/Box2D.xcworkspace</em>)</li>
<li>Set the Testbed as the current Scheme</li>
<li>Edit the Testbed Scheme, in the Run Options, use a custom working directory</li>
<li>Set the Testbed directory as the working directory</li>
<li>Press <code>Command-R</code> to build and run the Testbed</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">premake5 xcode4</span></pre></td></tr></table></figure>

<img src="/2019/12/24/Box2D/Box2D_Xcode.png" class="" title="Box2D_Xcode">

<h4 id="Scheme"><a href="#Scheme" class="headerlink" title="Scheme"></a>Scheme</h4><p><strong>Run &gt; Release</strong></p>
<img src="/2019/12/24/Box2D/Box2D_Scheme.png" class="" title="Box2D_Scheme">

<h3 id="创建-Box2D-Demo"><a href="#创建-Box2D-Demo" class="headerlink" title="创建 Box2D Demo"></a>创建 Box2D Demo</h3><p><strong>macOS &gt; Application &gt; Command Line Tool</strong></p>
<img src="/2019/12/24/Box2D/Box2D_New_Demo.png" class="" title="Box2D_New_Demo">

<ul>
<li>Project Name: <code>Box2DDemo</code></li>
<li>Language: <code>C++</code></li>
</ul>
<img src="/2019/12/24/Box2D/Box2D_Dome.png" class="" title="Box2D_Dome">

<h4 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h4><p>把 <code>Box2D-master</code> 里面的 <code>Box2D</code> 文件夹复制到 <code>Box2DDemo/Box2D/include</code> 下</p>
<img src="/2019/12/24/Box2D/Box2D_include.png" class="" title="Box2D_include">

<h4 id="库文件"><a href="#库文件" class="headerlink" title="库文件"></a>库文件</h4><p>把 <code>Box2D-master/Build/bin/x86_64/Release/libBox2D.a</code> 复制到 <code>Box2DDemo/Box2D/lib</code></p>
<img src="/2019/12/24/Box2D/Box2D_lib.png" class="" title="Box2D_lib">

<h4 id="添加库文件"><a href="#添加库文件" class="headerlink" title="添加库文件"></a>添加库文件</h4><ul>
<li>Build Phases<ul>
<li>Link Binary With Libraries<ul>
<li><code>+</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/24/Box2D/Box2D_Build_Phase.png" class="" title="Box2D_Build_Phase">

<ul>
<li>Add Files<ul>
<li><code>libBox2D.a</code></li>
</ul>
</li>
</ul>
<img src="/2019/12/24/Box2D/libBox2D.a.png" class="" title="libBox2D.a">

<p>会自动设置 <code>Build Settings &gt; Library Search Path</code></p>
<h4 id="配置头文件搜索路径"><a href="#配置头文件搜索路径" class="headerlink" title="配置头文件搜索路径"></a>配置头文件搜索路径</h4><p><em>Header Search Path</em>: <code>$(PROJECT_DIR)/Box2D/include</code></p>
<img src="/2019/12/24/Box2D/Header_Search_Path.png" class="" title="Header_Search_Path">

<h4 id="Xcode-自动补全"><a href="#Xcode-自动补全" class="headerlink" title="Xcode 自动补全"></a>Xcode 自动补全</h4><img src="/2019/12/24/Box2D/Autocomplete.png" class="" title="Autocomplete">

<h4 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h4><p>用 <code>Box2D-master</code> 里面的 <code>Hello World</code> 代码测试一下，可以正常执行</p>
<img src="/2019/12/24/Box2D/main.cpp.png" class="" title="main.cpp">

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>源码：</p>
<p><a href="https://github.com/GameDevLog/Box2DDemo" target="_blank" rel="noopener">https://github.com/GameDevLog/Box2DDemo</a></p>
<p>参考：</p>
<ol>
<li><a href="http://box2d.org" target="_blank" rel="noopener">Box2D 官网</a></li>
<li><a href="https://premake.github.io" target="_blank" rel="noopener">Premake 官网</a></li>
</ol>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>SFML</title>
    <url>/2019/12/19/SFML/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h2 id="Simple-and-Fast-Multimedia-Library"><a href="#Simple-and-Fast-Multimedia-Library" class="headerlink" title="Simple and Fast Multimedia Library"></a><a href="https://www.sfml-dev.org" target="_blank" rel="noopener">Simple and Fast Multimedia Library</a></h2><p><img src="https://www.sfml-dev.org/images/logo.png" alt="SFML"></p>
<h3 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h3><p>SFML 提供简单的接口使你容易开发游戏和多媒体应用 <a href="https://www.sfml-dev.org/learn.php" target="_blank" rel="noopener">教程和 API</a></p>
<p>五大模块</p>
<ul>
<li><code>system</code> 系统</li>
<li><code>window</code> 窗口</li>
<li><code>graphics</code> 图形</li>
<li><code>audio</code> 音频</li>
<li><code>network</code> 网络</li>
</ul>
<p><img src="https://www.sfml-dev.org/images/home/multimedia.png" alt="Multimedia image"></p>
<a id="more"></a>

<h3 id="多平台"><a href="#多平台" class="headerlink" title="多平台"></a>多平台</h3><p>支持 <code>Windows</code>, <code>Linux</code>, <code>macOS</code>，很快也会支持 <code>Android</code> &amp; <code>iOS</code></p>
<p>编译好的 SDK <a href="https://www.sfml-dev.org/download.php" target="_blank" rel="noopener">下载地址</a></p>
<p><img src="https://www.sfml-dev.org/images/home/multiplatform.png" alt="Multiplatform image"></p>
<h3 id="多语言"><a href="#多语言" class="headerlink" title="多语言"></a>多语言</h3><p>官方支持 <code>C</code> 和 <code>.Net</code> 平台语言，社区支持 <code>Java</code>, <code>Ruby</code>, <code>Python</code>, <code>Go</code> 等多种语言</p>
<p>查看更多 <a href="https://www.sfml-dev.org/download/bindings.php" target="_blank" rel="noopener">bindings page</a>.</p>
<p><img src="https://www.sfml-dev.org/images/home/multilanguage.png" alt="Multilanguage image"></p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="SFML-and-Xcode-macOS"><a href="#SFML-and-Xcode-macOS" class="headerlink" title="SFML and Xcode (macOS)"></a>SFML and Xcode (macOS)</h3><p>推荐 <code>frameworks</code>，尽管 <code>dylibs</code> 和 <code>frameworks</code> 可在同一系统同时安装（我都安装了）</p>
<ol>
<li><code>frameworks</code><ul>
<li>复制 <code>Frameworks</code> 下所有内容到 <code>/Library/Frameworks</code></li>
</ul>
</li>
<li><code>dylibs</code><ul>
<li>复制 <code>lib</code> 下所有内容到 <code>/usr/local/lib</code></li>
<li>复制 <code>include</code> 下所有内容到 <code>/usr/local/include</code></li>
</ul>
</li>
</ol>
<p>SFML 依赖</p>
<ul>
<li>复制 <code>extlibs</code> 下所有内容到 <code>/Library/Frameworks</code><br>Installing SFML</li>
</ul>
<p>Xcode 模板</p>
<ul>
<li>复制 <code>templates</code> 下所有内容到 <code>~/Library/Developer/Xcode/Templates</code></li>
</ul>


<ul>
<li>macOS<ul>
<li><code>SFML App</code> macOS App</li>
<li><code>SFML CLT</code> 传统 Unix 程序</li>
</ul>
</li>
</ul>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="SFML-App"><a href="#SFML-App" class="headerlink" title="SFML App"></a><code>SFML App</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ditto: can&#39;t get real path for source &#39;&#x2F;Users&#x2F;SFML&#x2F;Desktop&#x2F;packaging&#x2F;tmp&#x2F;install&#x2F;Library&#x2F;Frameworks&#x2F;sfml-system.framework&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">couldn&#39;t copy &#x2F;Users&#x2F;SFML&#x2F;Desktop&#x2F;packaging&#x2F;tmp&#x2F;install&#x2F;Library&#x2F;Frameworks&#x2F;sfml-system.framework to &#x2F;Users&#x2F;iosdevlog&#x2F;Library&#x2F;Developer&#x2F;Xcode&#x2F;DerivedData&#x2F;X-czgcehtuernfweapkkunlrhgcjqf&#x2F;Build&#x2F;Products&#x2F;Debug&#x2F;X.app&#x2F;Contents&#x2F;Frameworks&#x2F;&#x2F;sfml-system.framework</span></pre></td></tr><tr><td class="code"><pre><span class="line">Command PhaseScriptExecution failed with a nonzero exit code</span></pre></td></tr></table></figure>

<ul>
<li>Target<ul>
<li>Build Phase<ul>
<li>Run Script<ul>
<li>Run Script only when installing: <code>true</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/19/SFML/SFML_App_Issue.png" class="" title="SFML_App_Issue">

<h4 id="SFML-CLT"><a href="#SFML-CLT" class="headerlink" title="SFML CLT"></a><code>SFML CLT</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2019-12-19 14:36:17.966474+0800 sa[79489:1852939] Metal API Validation Enabled</span></pre></td></tr><tr><td class="code"><pre><span class="line">2019-12-19 14:36:18.114539+0800 sa[79489:1853624] flock failed to lock maps file: errno &#x3D; 35</span></pre></td></tr><tr><td class="code"><pre><span class="line">2019-12-19 14:36:18.116856+0800 sa[79489:1853624] flock failed to lock maps file: errno &#x3D; 35</span></pre></td></tr><tr><td class="code"><pre><span class="line">Failed to load image &quot;icon.png&quot;. Reason: Unable to open file</span></pre></td></tr><tr><td class="code"><pre><span class="line">Program ended with exit code: 1</span></pre></td></tr></table></figure>

<ul>
<li>Target<ul>
<li>Build Phase<ul>
<li><code>+</code> New Copy Files Phase<ul>
<li>add Resources</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/19/SFML/Build_Phase.png" class="" title="Build Phase">

<img src="/2019/12/19/SFML/Copy_Files.png" class="" title="Copy Files">

<img src="/2019/12/19/SFML/GameDevLog.png" class="" title="Demo">

<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul>
<li>Window creation / 创建窗口</li>
<li>Creation of graphic display / 显示图形</li>
<li>Handle user inputs / 处理输入</li>
<li>Deal with the user inputs / 处理输入</li>
<li>Display game objects on the screen / 显示</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span> &#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// non copyable class</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    Game(<span class="keyword">const</span> Game &amp;) = <span class="keyword">delete</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Game &amp;<span class="keyword">operator</span>=(<span class="keyword">const</span> Game &amp;) = <span class="keyword">delete</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Game(); <span class="comment">//&lt; constructor</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">private</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">processEvents</span><span class="params">()</span></span>; <span class="comment">//&lt; Process events</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>; <span class="comment">//&lt; do some updates</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">render</span><span class="params">()</span></span>; <span class="comment">//&lt; draw all the stuff</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    sf::RenderWindow _window; <span class="comment">//&lt; the window use to display the game</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    sf::CircleShape _player;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Game game;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    game.run();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<ul>
<li><p><code>= delete</code> 是 C++ 11 新特性，允许我们显示删除类的 <code>成员函数</code>， 不可 <code>copy</code></p>
</li>
<li><p>另一方案是 扩展 <code>sf::NonCopyable</code> </p>
</li>
<li><p><code>= default</code> 显示 build</p>
</li>
<li><p><code>processEvents()</code>: This will manage all events from the user</p>
</li>
<li><p><code>update()</code>: This will update the entire game</p>
</li>
<li><p><code>render()</code>: This will manage all the rendering of the game</p>
</li>
</ul>
<img src="/2019/12/19/SFML/loop.png" class="" title="loop">

<img src="/2019/12/19/SFML/Game_Loop.png" class="" title="Game Loop">

<img src="/2019/12/19/SFML/representing.png" class="" title="representing">

<h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h4><p><code>CMakeLists.txt</code></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> (CMAKE_CXX_STANDARD <span class="number">11</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>(main)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">## If you want to link SFML statically</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># set(SFML_STATIC_LIBRARIES TRUE)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">## In most cases better set in the CMake cache</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># set(SFML_DIR "&lt;sfml root prefix&gt;/lib/cmake/SFML")</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(SFML <span class="number">2.5</span> COMPONENTS system window graphics audio network REQUIRED)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">target_link_libraries</span>(main sfml-system sfml-window sfml-graphics sfml-audio sfml-network)</span></pre></td></tr></table></figure>

<p><code>main.cpp</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SFML/Window.hpp&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SFML/Graphics.hpp&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//the window use for the display</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    sf::<span class="function">RenderWindow <span class="title">window</span><span class="params">(sf::VideoMode(<span class="number">400</span>,<span class="number">400</span>),<span class="string">"01_Introduction"</span>)</span></span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//set the maximum frame per second</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    window.setFramerateLimit(<span class="number">60</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//construct a circle</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    sf::<span class="function">CircleShape <span class="title">circle</span><span class="params">(<span class="number">150</span>)</span></span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//set his color</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    circle.setFillColor(sf::Color::Blue);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//set his position</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    circle.setPosition(<span class="number">10</span>, <span class="number">20</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//main loop</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span> (window.isOpen())</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//to store the events</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        sf::Event event;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//process events</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span>(window.pollEvent(event))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//Close window</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (event.type == sf::Event::Closed)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                window.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">//keyboard input : Escape is press</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (event.type == sf::Event::KeyPressed <span class="keyword">and</span> event.key.code == sf::Keyboard::Escape)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                window.close();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//Clear screen</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        window.clear();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//draw the cirle</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        window.draw(circle);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//Update the window</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        window.display();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><code>shell</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cmake .</span></pre></td></tr><tr><td class="code"><pre><span class="line">make</span></pre></td></tr><tr><td class="code"><pre><span class="line">./main</span></pre></td></tr></table></figure>

<h4 id="同时编译多个-cpp-文件"><a href="#同时编译多个-cpp-文件" class="headerlink" title="同时编译多个 cpp 文件"></a>同时编译多个 cpp 文件</h4><p><code>CMakeLists.txt</code></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>(MulitExe)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>(GLOB_RECURSE EXTRA_FILES */*)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">add_custom_target</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_OTHER_FILES ALL WORKING_DIRECTORY <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span> SOURCES <span class="variable">$&#123;EXTRA_FILES&#125;</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>(GLOB_RECURSE code_sources <span class="string">"*.cpp"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(code_src <span class="variable">$&#123;code_sources&#125;</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">get_filename_component</span>(mexecutable <span class="variable">$&#123;code_src&#125;</span> NAME_WE)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">find_package</span>(SFML <span class="number">2.5</span> COMPONENTS system window graphics audio network REQUIRED)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">add_executable</span>(<span class="variable">$&#123;mexecutable&#125;</span> <span class="variable">$&#123;code_src&#125;</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;mexecutable&#125;</span> sfml-system sfml-window sfml-graphics sfml-audio sfml-network)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">endforeach</span>()</span></pre></td></tr></table></figure>

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>参考：</p>
<ol>
<li><a href="https://www.sfml-dev.org/tutorials/2.5/start-osx.php" target="_blank" rel="noopener">SFML and Xcode (macOS)</a></li>
<li><a href="https://www.youtube.com/watch?v=WOyp5n2FmZY" target="_blank" rel="noopener">C++ SFML 2.5 Library macOS Installation + First Project (Easy)</a></li>
<li><a href="https://en.sfml-dev.org/forums/index.php?topic=24070.0" target="_blank" rel="noopener">SFML 2.5 CMake Migration</a></li>
</ol>
]]></content>
      <categories>
        <category>SFML</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Tetris / 俄罗斯方块</title>
    <url>/2019/12/14/Tetris/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/7.Tetris.gif" alt="Tetris"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="Shape-形状"><a href="#Shape-形状" class="headerlink" title="Shape / 形状"></a>Shape / 形状</h3><ul>
<li>Assets &gt; Create &gt; Sprites &gt; Square</li>
</ul>
<blockquote>
</blockquote>
<ul>
<li>Hierarchy</li>
</ul>
<p><code>Ctrl+D</code>, <code>W</code>, <code>Crrl</code> + 方向键</p>
<ul>
<li>Inspector<ul>
<li>Transform<ul>
<li>Scale<ul>
<li>X: <code>0.9</code></li>
<li>Y: <code>0.9</code></li>
</ul>
</li>
</ul>
</li>
<li>Sprite Renderer<ul>
<li>Color: <code>Pink</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>制作 7 种方块</p>
<img src="/2019/12/14/Tetris/Prefabs.png" class="" title="Prefabs">

<h3 id="Move-Left-Right-左右移动"><a href="#Move-Left-Right-左右移动" class="headerlink" title="Move Left Right / 左右移动"></a>Move Left Right / 左右移动</h3><p>添加坐标原点</p>
<img src="/2019/12/14/Tetris/0_0.png" class="" title="(0,0)">

<img src="/2019/12/14/Tetris/Origin.png" class="" title="Origin">


<p><code>ValidMove()</code> 每一个小方块如果超出边界，为非法操作，需要退回上一状态。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ValidMove</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">foreach</span> (Transform child <span class="keyword">in</span> transform)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> roundedX = Mathf.RoundToInt(child.transform.position.x);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> roundedY = Mathf.RoundToInt(child.transform.position.y);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (roundedX &lt; <span class="number">0</span> || roundedX &gt;= width || roundedY &lt; <span class="number">0</span> || roundedY &gt;= height)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>左右移动，如果移动非法，还原。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftArrow))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.position += <span class="keyword">new</span> Vector3(<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!ValidMove())</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            transform.position -= <span class="keyword">new</span> Vector3(<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.RightArrow))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.position += <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!ValidMove())</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            transform.position -= <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (Time.time - previousTime &gt; (Input.GetKey(KeyCode.DownArrow) ? fallTime / <span class="number">10</span> : fallTime))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.position += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        previousTime = Time.time;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="Rotate-旋转"><a href="#Rotate-旋转" class="headerlink" title="Rotate / 旋转"></a>Rotate / 旋转</h3><p>找到旋转的中心，我这里没有按照图片上的操作，除了 <code>田</code> 字方块为 <code>(0.5, 0.5, 0)</code> 为旋转中心外，其它均为 <code>0</code> 号方块的中心 <code>(0, 0, 0)</code></p>
<img src="/2019/12/14/Tetris/Rotate.png" class="" title="Rotate">

<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// ...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.UpArrow))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">// local position -&gt; global position</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.RotateAround(transform.TransformPoint(rotationPoint), <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), <span class="number">90f</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!ValidMove())</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            transform.RotateAround(transform.TransformPoint(rotationPoint), <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), <span class="number">-90f</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/14/Tetris/Up_Rotate.png" class="" title="Up Rotate">

<h3 id="Collider-碰撞检测"><a href="#Collider-碰撞检测" class="headerlink" title="Collider / 碰撞检测"></a>Collider / 碰撞检测</h3><p>生成器生成方块</p>


<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Spawn</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GameObject[] tetrominoes;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        NewTetromino();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NewTetromino</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Instantiate(tetrominoes[Random.Range(<span class="number">0</span>, tetrominoes.Length)], transform.position, Quaternion.identity);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/14/Tetris/NewTetromino.png" class="" title="NewTetromino">

<p>使用二维数组存放小方块的值</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddToGrid</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">foreach</span> (Transform child <span class="keyword">in</span> transform)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> roundedX = Mathf.RoundToInt(child.transform.position.x);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">int</span> roundedY = Mathf.RoundToInt(child.transform.position.y);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        grid[roundedX, roundedY] = child;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/14/Tetris/Grid.png" class="" title="Grid">

<p>当前小方块为 <code>null</code>，才可以移动</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ValidMove</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">foreach</span> (Transform child <span class="keyword">in</span> transform)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">// ...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (grid[roundedX, roundedY] != <span class="literal">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/14/Tetris/Collider.png" class="" title="Collider">

<h3 id="Clean-Line-消行"><a href="#Clean-Line-消行" class="headerlink" title="Clean Line / 消行"></a>Clean Line / 消行</h3><img src="/2019/12/14/Tetris/CleanLine.png" class="" title="CleanLine">

<p>算法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 检测每一行，如果成行</span></pre></td></tr><tr><td class="code"><pre><span class="line">    1. 删除当前行</span></pre></td></tr><tr><td class="code"><pre><span class="line">    1. 上面的行下移</span></pre></td></tr></table></figure>

<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckForLines</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> row = height - <span class="number">1</span>; row &gt;= <span class="number">0</span>; row--)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (HasLine(row))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            DeleteLine(row);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            RowDown(row);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h4 id="如果成行"><a href="#如果成行" class="headerlink" title="如果成行"></a>如果成行</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">HasLine</span>(<span class="params"><span class="keyword">int</span> row</span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; width; col++)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (grid[col, row] == <span class="literal">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h5 id="删除当前行"><a href="#删除当前行" class="headerlink" title="删除当前行"></a>删除当前行</h5><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DeleteLine</span>(<span class="params"><span class="keyword">int</span> row</span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; width; col++)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Destroy(grid[col, row].gameObject);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        grid[col, row] = <span class="literal">null</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h5 id="上面的行下移"><a href="#上面的行下移" class="headerlink" title="上面的行下移"></a>上面的行下移</h5><pre><code class="csharp"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RowDown</span>(<span class="params"><span class="keyword">int</span> currentRow</span>)</span>
<span class="function"></span>{
    <span class="keyword">for</span> (<span class="keyword">int</span> row = currentRow; row &lt; height; row++)
    {
        <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; width; col++)
        {
            <span class="keyword">if</span> (grid[col, row] != <span class="literal">null</span>)
            {
                grid[col, row - <span class="number">1</span>] = grid[col, row];
                grid[col, row] = <span class="literal">null</span>;
                grid[col, row - <span class="number">1</span>].transform.position -= <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>);
            }
        }
    }
}</code></pre>
<img src="/2019/12/14/Tetris/RowDown.png" class="" title="RowDown">

<h3 id="Audio-音效"><a href="#Audio-音效" class="headerlink" title="Audio / 音效"></a>Audio / 音效</h3><p><code>Background</code> 添加 <code>Audio Source</code></p>
<ul>
<li>Inspector<ul>
<li>Audio Source<ul>
<li>AudioClip: <code>Tetris</code></li>
<li>Play On Awake: <code>true</code></li>
<li>Loop: <code>true</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/14/Tetris/Audio.png" class="" title="Audio">

<h2 id="导出游戏"><a href="#导出游戏" class="headerlink" title="导出游戏"></a>导出游戏</h2><ul>
<li>File<ul>
<li>Build Settings (Shift + Cmd + B)</li>
</ul>
</li>
</ul>
<p><img src="https://game.iosdevlog.com/2019/12/04/Bomber-Man/Build_Settings.png" alt="Build Settings"></p>
<ul>
<li>Project Settings</li>
</ul>
<img src="/2019/12/14/Tetris/Project_Settings.png" class="" title="Project Settings">

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>按照教程终于实现了，10 分钟的教程，做了几个小时才完成，主要是对大方块的 <code>(x, y, z)</code> 坐标一开始没有归整，0 号方块应该中心点是 <code>(0, 0, 0)</code> ，在部分大方块都应该按照 0 号方块旋转。</p>
<p>参考：</p>
<ol>
<li><a href="https://www.youtube.com/watch?v=T5P8ohdxDjo" target="_blank" rel="noopener">CODING MY OWN TETRIS (Unity)</a></li>
</ol>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
<p>找到游戏列表对应的 <a href="https://game.iosdevlog.com">GameDevLog</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>3D</tag>
        <tag>Design</tag>
        <tag>Music</tag>
      </tags>
  </entry>
  <entry>
    <title>ARFoundation</title>
    <url>/2019/12/14/ARKit/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/8.ARDemo.gif" alt="ARDemo"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="安装-ARKit-Package"><a href="#安装-ARKit-Package" class="headerlink" title="安装 ARKit Package"></a>安装 ARKit Package</h3><ul>
<li>Window<ul>
<li>Package Manager</li>
</ul>
</li>
</ul>
<p>搜索 <code>AR</code></p>
<ul>
<li><code>AR Foundation</code> 必需</li>
<li><code>ARKit XR Plugin</code> / iOS</li>
<li><code>ARCore XR Plugin</code> / Android</li>
</ul>
<img src="/2019/12/14/ARKit/ARKit_Package.png" class="" title="ARKit Package">

<p>打开 <code>Package</code> 时遇到网络问题</p>
<p><a href="https://forum.unity.com/threads/network-configuration.590470/" target="_blank" rel="noopener">Network configuration</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'#!/bin/bash</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">export HTTP_PROXY=proxy-url</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">export HTTPS_PROXY=proxy-url</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">nohup "/Applications/Unity Hub.app/Contents/MacOS/Unity Hub" &amp;&gt;/dev/null &amp;'</span> &gt; launchUnityHub.command</span></pre></td></tr><tr><td class="code"><pre><span class="line">chmod +x launchUnityHub.command</span></pre></td></tr></table></figure>

<h3 id="AR-Session"><a href="#AR-Session" class="headerlink" title="AR Session"></a>AR Session</h3><p>删除自带的 <code>Main Camera</code></p>
<ul>
<li><p>Hierarchy</p>
<ul>
<li>Create<ul>
<li>XR<ul>
<li>AR Session</li>
<li>AR Session Origin</li>
</ul>
</li>
<li>Cube</li>
</ul>
</li>
</ul>
</li>
<li><p>Inspector</p>
<ul>
<li>Position:<ul>
<li>Y: <code>0.05</code></li>
</ul>
</li>
<li>Scale<ul>
<li>X: <code>0.1</code></li>
<li>Y: <code>0.1</code></li>
<li>Z: <code>0.1</code></li>
</ul>
</li>
</ul>
</li>
<li><p>Gizmos</p>
<ul>
<li>3D Icons: <code>0</code></li>
</ul>
</li>
</ul>
<img src="/2019/12/14/ARKit/AR_Camera.png" class="" title="AR Camera">

<h4 id="Prefabs"><a href="#Prefabs" class="headerlink" title="Prefabs"></a>Prefabs</h4><ul>
<li>Hierarchy<ul>
<li>Empty Object: <code>Game Piece</code></li>
<li>Game Piece<ul>
<li>Cube</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Quad-四方块"><a href="#Quad-四方块" class="headerlink" title="Quad / 四方块"></a>Quad / 四方块</h3><ul>
<li>Hierarchy<ul>
<li>Empty Object: <code>Placement Indicator</code></li>
<li>Placement Indicator<ul>
<li>Quad</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Rotation:<ul>
<li>X: <code>90</code></li>
</ul>
</li>
<li>Scale:<ul>
<li>X: <code>0.1</code></li>
<li>Y: <code>0.1</code></li>
<li>Z: <code>0.1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/14/ARKit/Quad.png" class="" title="Scale Quad">

<h3 id="导入-Toy-Plane"><a href="#导入-Toy-Plane" class="headerlink" title="导入 Toy Plane"></a>导入 <code>Toy Plane</code></h3><p>导入 <code>package</code> 后，模型调整一下。</p>
<p>模型有点大，可以调整 <code>ARSessionOrigin</code>，相关于缩小了模型尺寸</p>
<ul>
<li>Inspector<ul>
<li>Scale<ul>
<li>X: <code>10</code></li>
<li>Y: <code>10</code></li>
<li>Z: <code>10</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><ol>
<li>屏幕中心点发出射线</li>
<li>如果射线与检测的平面相交<ol>
<li>在平面显示指示器</li>
<li>如果点击指示器<ol>
<li>指示器位置生成 <code>Prefabs</code> 模型</li>
</ol>
</li>
</ol>
</li>
</ol>
<p><code>ARTapToPlaceObject.cs</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.XR.ARFoundation;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.XR.ARSubsystems;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ARTapToPlaceObject</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GameObject objectToPlace;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GameObject placementIndictor;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> ARRaycastManager raycastManager;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Pose placementPose;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> placementPoseIsVilid;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        raycastManager = FindObjectOfType&lt;ARRaycastManager&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        UpdatePlacementPose();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        UpdatePlacementIndicator();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (placementPoseIsVilid &amp;&amp; Input.touchCount &gt; <span class="number">0</span> &amp;&amp; Input.GetTouch(<span class="number">0</span>).phase == TouchPhase.Began)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            PlaceObject();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdatePlacementPose</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">var</span> screenCenter = Camera.current.ViewportToScreenPoint(<span class="keyword">new</span> Vector3(<span class="number">0.5f</span>, <span class="number">0.5f</span>));</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">var</span> hits = <span class="keyword">new</span> List&lt;ARRaycastHit&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        raycastManager.Raycast(screenCenter, hits, TrackableType.Planes);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        placementPoseIsVilid = hits.Count &gt; <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (placementPoseIsVilid)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            placementPose = hits[<span class="number">0</span>].pose;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">var</span> cameraForword = Camera.current.transform.forward;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">var</span> cameraBearing = <span class="keyword">new</span> Vector3(cameraForword.x, <span class="number">0</span>, cameraForword.z).normalized;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            placementPose.rotation = Quaternion.LookRotation(cameraBearing);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdatePlacementIndicator</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (placementPoseIsVilid)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            placementIndictor.SetActive(<span class="literal">true</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            placementIndictor.transform.SetPositionAndRotation(placementPose.position, placementPose.rotation);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            placementIndictor.SetActive(<span class="literal">false</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PlaceObject</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Instantiate(objectToPlace, placementPose.position, placementPose.rotation);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/14/ARKit/Scale_ARSession.png" class="" title="Scale ARSession">

<h2 id="导出游戏"><a href="#导出游戏" class="headerlink" title="导出游戏"></a>导出游戏</h2><ul>
<li>File <ul>
<li>Build Settings (Shift + Cmd + B)</li>
</ul>
</li>
</ul>
<p><img src="https://game.iosdevlog.com/2019/12/04/Bomber-Man/Build_Settings.png" alt="Build Settings"></p>
<ul>
<li>Player Settings</li>
</ul>
<img src="/2019/12/14/ARKit/Player_Settings.png" class="" title="Player Settings">

<ul>
<li>iOS<ul>
<li>Auto Graphics API: <code>false</code> <strong>! importent</strong></li>
<li>Requires ARKit Support: <code>true</code></li>
<li>Camera Usage Description</li>
<li>Target minimum iOS Version: <code>11</code></li>
<li>Architecture: <code>ARM64</code></li>
</ul>
</li>
</ul>
<p>如果不行，可以要以下设置</p>
<ul>
<li>Graphics<ul>
<li>Always Includes Shaders<ul>
<li>Elements 0: <code>Sprites/Default</code></li>
<li>Elements 1: <code>UI/Default</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/14/ARKit/Player_Settings_ARKit.png" class="" title="Player Settings ARKit">

<ul>
<li>Android: <ul>
<li>Multithreaded Rendering: <code>false</code></li>
<li>Minimum API Level: `Android 7.0 ‘Nougat’ (API 24)</li>
</ul>
</li>
</ul>
<img src="/2019/12/14/ARKit/Player_Settings_Android.png" class="" title="Player Settings Android">

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>参考：</p>
<ul>
<li><a href="https://stackoverflow.com/questions/58534265/unity-application-doesnt-run-on-ios-due-to-shader-warning-and-compiler-failed-w" target="_blank" rel="noopener">Unity application doesn’t run on iOS due to Shader warning and Compiler failed with XPC_ERROR_CONNECTION_INTERRUPTED</a></li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>3D</tag>
        <tag>AR</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity Tutorials</title>
    <url>/2019/12/14/Unity-Tutorials/</url>
    <content><![CDATA[<h2 id="5-Great-Assets-for-Improving-Graphics-in-Unity-2019"><a href="#5-Great-Assets-for-Improving-Graphics-in-Unity-2019" class="headerlink" title="5 Great Assets for Improving Graphics in Unity 2019!"></a><a href="https://www.youtube.com/watch?v=oKoKnQQuAPw&list=PLX2vGYjWbI0TPcPOKW6GxwuY18eg7CjKZ&index=17" target="_blank" rel="noopener">5 Great Assets for Improving Graphics in Unity 2019!</a></h2><a id="more"></a>

<ol>
<li><a href="https://ole.unity.com/MeshEffects" target="_blank" rel="noopener">Mesh Effects</a></li>
<li><a href="https://ole.unity.com/Surforge" target="_blank" rel="noopener">Surforge</a></li>
<li><a href="https://ole.unity.com/ScreenSpaceShadows" target="_blank" rel="noopener">SE Screen-Space Shadows</a></li>
<li><a href="https://ole.unity.com/stylizer" target="_blank" rel="noopener">Stylizer</a></li>
<li><a href="https://ole.unity.com/CTS" target="_blank" rel="noopener">CTS</a></li>
</ol>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Design</tag>
        <tag>Tutorials</tag>
      </tags>
  </entry>
  <entry>
    <title>Free Platform Game Assets</title>
    <url>/2019/12/14/Free-Platform-Game-Assets/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2>

<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h2 id="导出游戏"><a href="#导出游戏" class="headerlink" title="导出游戏"></a>导出游戏</h2><ul>
<li>File<ul>
<li>Build Settings (Shift + Cmd + B)</li>
</ul>
</li>
</ul>
<p><img src="https://game.iosdevlog.com/2019/12/04/Bomber-Man/Build_Settings.png" alt="Build Settings"></p>
<ul>
<li>Player Settings</li>
</ul>


<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>参考：</p>
<ol>
<li><a href="https://assetstore.unity.com/lists/great-free-2d-assets-87803" target="_blank" rel="noopener">Great Free 2D Assets </a></li>
</ol>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Design</tag>
        <tag>Assets</tag>
      </tags>
  </entry>
  <entry>
    <title>Sunny Land / Unity 资源</title>
    <url>/2019/12/11/Sunny-Land/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/6.SunnyLand.gif" alt="Sunny Land"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="创建-2D-游戏"><a href="#创建-2D-游戏" class="headerlink" title="创建 2D 游戏"></a>创建 2D 游戏</h3><p>略</p>
<h3 id="Import-Assets-导入资源"><a href="#Import-Assets-导入资源" class="headerlink" title="Import Assets / 导入资源"></a>Import Assets / 导入资源</h3><p><a href="https://assetstore.unity.com/packages/2d/characters/sunny-land-103349" target="_blank" rel="noopener">Sunny Land</a></p>
<img src="/2019/12/11/Sunny-Land/Sunny_Land_Assets.png" class="" title="Sunny Land Assets">

<h3 id="Background-背景"><a href="#Background-背景" class="headerlink" title="Background / 背景"></a>Background / 背景</h3><p>每单元像素改为 <code>16</code>，<em>以下所有资源做相同操作</em>。</p>
<ul>
<li><p>Project</p>
<ul>
<li>Sunnyland<ul>
<li>artwork<ul>
<li>Environment<ul>
<li>back</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Inspector</p>
<ul>
<li>Sprite Mode<ul>
<li>Pixels Per Unit: <code>16</code></li>
</ul>
</li>
</ul>
</li>
<li><p>back -&gt; Hierarchy</p>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Background.png" class="" title="Background">

<h3 id="Tilemap-瓦片地图"><a href="#Tilemap-瓦片地图" class="headerlink" title="Tilemap / 瓦片地图"></a>Tilemap / 瓦片地图</h3><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>2D Object<ul>
<li>Tilemap</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Window<ul>
<li>2D<ul>
<li>Tile palette</li>
</ul>
</li>
</ul>
</li>
<li>Tile palette<ul>
<li>Create New Palette</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Tile_Palette.png" class="" title="Tile Palette Window">

<img src="/2019/12/11/Sunny-Land/Create_new_Palette.png" class="" title="Create new Palette">       

<ul>
<li>Project<ul>
<li>Sunnyland<ul>
<li>artwork<ul>
<li>Environment<ul>
<li>tileset</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Sprite Mode: <code>Multiple</code><ul>
<li>Pixels Per Unit: <code>16</code></li>
</ul>
</li>
<li>Apply</li>
<li>Sprite Editor</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Sprite_Editor.png" class="" title="Sprite Editor">

<ul>
<li>Sprite Editor<ul>
<li>Slice<ul>
<li>Type: <code>Grid By Cell Size</code></li>
<li>Pixel Size<ul>
<li>X: <code>16</code></li>
<li>Y: <code>16</code></li>
</ul>
</li>
</ul>
</li>
<li>Apply</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Slice.png" class="" title="Create Slice">

<ul>
<li>Project<ul>
<li>Sunnyland<ul>
<li>artwork<ul>
<li>Environment<ul>
<li>tileset -&gt; <code>Tile Palette</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Tileset.png" class="" title="Tileset">

<img src="/2019/12/11/Sunny-Land/Draw_Map.png" class="" title="Draw Map">

<h3 id="Main-Camera-Size-调整相机尺寸"><a href="#Main-Camera-Size-调整相机尺寸" class="headerlink" title="Main Camera Size / 调整相机尺寸"></a>Main Camera Size / 调整相机尺寸</h3><ul>
<li>Inspector<ul>
<li>Camera<ul>
<li>Size: <code>6</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Main_Camera_Size.png" class="" title="Main Camera Size">

<h3 id="Sorting-Layer-层排序"><a href="#Sorting-Layer-层排序" class="headerlink" title="Sorting Layer / 层排序"></a>Sorting Layer / 层排序</h3><p><code>Order In Layer</code> 也可以排序，数字越大越前</p>
<ul>
<li>Hierarchy<ul>
<li>Back</li>
</ul>
</li>
<li>Inspector<ul>
<li>Sprite Renderer<ul>
<li>Additional Settings<ul>
<li>Sorting Layer<ul>
<li>Add Sorting Layer…</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>新增</p>
<ol>
<li>Background</li>
<li>Foreground</li>
</ol>
<img src="/2019/12/11/Sunny-Land/Sorting_Layer.png" class="" title="Sorting Layer">

<ul>
<li><p>Hierarchy</p>
<ul>
<li>Back</li>
</ul>
</li>
<li><p>Inspector</p>
<ul>
<li>Check: <code>显示 Back</code></li>
<li>Sprite Renderer<ul>
<li>Additional Settings<ul>
<li>Sorting Layer: <code>Background</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Hierarchy</p>
<ul>
<li>Grid<ul>
<li>Tielmap</li>
</ul>
</li>
</ul>
</li>
<li><p>Inspector</p>
<ul>
<li>Sprite Renderer<ul>
<li>Additional Settings<ul>
<li>Sorting Layer: <code>Fackground</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Change_Layer.png" class="" title="Change Layer">

<h3 id="Player"><a href="#Player" class="headerlink" title="Player"></a>Player</h3><p>创建 Player Sprite, 并将 <code>player-idle-1</code> 拖入</p>
<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Sunnyland<ul>
<li>artwork<ul>
<li>Sprites<ul>
<li>player<ul>
<li>idle: <code>16 Pixels Per Unit</code><ul>
<li><code>player-idle-1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>-&gt; </p>
<ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>2D Object<ul>
<li>Sprite: <code>Player</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Sprite Renderer<ul>
<li>Sprite: <code>player-idle-1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Physics-物理"><a href="#Physics-物理" class="headerlink" title="Physics / 物理"></a>Physics / 物理</h3><p>Tilemap</p>
<ul>
<li>Inspector<ul>
<li>Tilemap Collider 2D</li>
</ul>
</li>
</ul>
<p>Player</p>
<ul>
<li>Inspector<ul>
<li>Rigidbody 2D<ul>
<li>Constraints<ul>
<li>Freeze Rotation<ul>
<li>Z: <code>true</code> # 不让 Z 轴移动</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Box Collider 2D<ul>
<li>Edit Collider</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Player_Box_Collider_2D.png" class="" title="Player Box Collider_2D">

<p><code>PlayerController.cs</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerController</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> moveSpeed;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> jumpForce;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Rigidbody2D rb;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (moveSpeed &lt;= <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            moveSpeed = <span class="number">400</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (jumpForce &lt;= <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            jumpForce = <span class="number">400</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Movement();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Movement</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">// -1 ~ 1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">float</span> horizontalMove = Input.GetAxis(<span class="string">"Horizontal"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">// [-1, 0, 1]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">float</span> faceDirection = Input.GetAxisRaw(<span class="string">"Horizontal"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">float</span> EPSILON = <span class="number">0.1f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Math.Abs(horizontalMove) &gt; EPSILON)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(horizontalMove * moveSpeed * Time.deltaTime, rb.velocity.y);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> ((Math.Abs(faceDirection) &gt; EPSILON))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            transform.localScale = <span class="keyword">new</span> Vector3(faceDirection, <span class="number">1</span>, <span class="number">1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Input.GetButtonDown(<span class="string">"Jump"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, jumpForce * Time.deltaTime);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="Animation-动画"><a href="#Animation-动画" class="headerlink" title="Animation / 动画"></a>Animation / 动画</h3><p><strong>先选中 <code>Player</code><br>先选中 <code>Player</code><br>先选中 <code>Player</code></strong></p>
<ul>
<li>Porject<ul>
<li>Assets<ul>
<li>Animation<ul>
<li>Player<ul>
<li>Animator Controller: <code>Player</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>-&gt; </p>
<ul>
<li>Inpsector<ul>
<li>Animator<ul>
<li>Controller: <code>Player</code></li>
</ul>
</li>
</ul>
</li>
<li>Hierarchy<ul>
<li>Player</li>
</ul>
</li>
<li>Window<ul>
<li>Animation<ul>
<li>Animation</li>
</ul>
</li>
</ul>
</li>
<li>Animation<ul>
<li>Create: <code>Idle</code></li>
<li>Setting<ul>
<li>Show Sample Rate: <code>true</code></li>
</ul>
</li>
<li>Samples: <code>10</code></li>
</ul>
</li>
<li>Project<ul>
<li>Assets<ul>
<li>Sunnyland<ul>
<li>artwork<ul>
<li>Sprites<ul>
<li>player<ul>
<li>idle<ul>
<li>player-idle-[1-4] -&gt;<code>Idle</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Animation.png" class="" title="Add Animation">

<h3 id="Animator-动画师（动画转变）"><a href="#Animator-动画师（动画转变）" class="headerlink" title="Animator / 动画师（动画转变）"></a>Animator / 动画师（动画转变）</h3><ul>
<li>Window<ul>
<li>Animation<ul>
<li>Animator</li>
</ul>
</li>
</ul>
</li>
<li>Animator<ul>
<li>Idle<ul>
<li>Make Transition<ul>
<li>Run</li>
<li>Jump</li>
</ul>
</li>
</ul>
</li>
<li>Run<ul>
<li>Make Transition<ul>
<li>Idle</li>
<li>Jump</li>
</ul>
</li>
</ul>
</li>
<li>Jump<ul>
<li>Make Transition<ul>
<li>Fall</li>
</ul>
</li>
</ul>
</li>
<li>Fall<ul>
<li>Make Transition<ul>
<li>Idle</li>
</ul>
</li>
</ul>
</li>
<li>Parameters + float<ul>
<li>running: <code>0.0</code></li>
</ul>
</li>
<li>Parameters + bool<ul>
<li>jumping: <code>false</code></li>
<li>falling: <code>false</code></li>
<li>idle: <code>false</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Animator.png" class="" title="Add Animator">

<p>Idle -&gt; Run</p>
<ul>
<li>Inspector<ul>
<li>Has Exit Time: <code>false</code></li>
<li>Settings<ul>
<li>Transition Duration: <code>0</code></li>
</ul>
</li>
<li>Conditions<ul>
<li>running &gt; <code>0.1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Run -&gt; Idle</p>
<ul>
<li>Inspector<ul>
<li>Has Exit Time: <code>false</code></li>
<li>Settings<ul>
<li>Transition Duration: <code>0</code></li>
</ul>
</li>
<li>Conditions<ul>
<li>running &lt; <code>0.1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Idle -&gt; Jump &amp; Run -&gt; Jump</p>
<ul>
<li>Inspector<ul>
<li>Has Exit Time: <code>false</code></li>
<li>Settings<ul>
<li>Transition Duration: <code>0</code></li>
</ul>
</li>
<li>Conditions<ul>
<li>jumping: <code>true</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Jump -&gt; Fall</p>
<ul>
<li>Inspector<ul>
<li>Has Exit Time: <code>false</code></li>
<li>Settings<ul>
<li>Transition Duration: <code>0</code></li>
</ul>
</li>
<li>Conditions<ul>
<li>falling: <code>true</code></li>
<li>jumping: <code>false</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Fall -&gt; Idle</p>
<ul>
<li>Inspector<ul>
<li>Has Exit Time: <code>false</code></li>
<li>Settings<ul>
<li>Transition Duration: <code>0</code></li>
</ul>
</li>
<li>Conditions<ul>
<li>falling: <code>false</code></li>
<li>idle: <code>true</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Bug-Fix"><a href="#Bug-Fix" class="headerlink" title="Bug Fix:"></a>Bug Fix:</h3><ul>
<li>Bug 现象<ul>
<li><code>Player</code> 会卡住</li>
</ul>
</li>
<li>原因<ul>
<li><code>Box Collider 2D</code> 与 <code>Tilemap</code> 多点碰撞检测</li>
</ul>
</li>
<li>解决方案<ul>
<li>添加 <code>Circle Collider 2D</code>，单点碰撞检测</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Circle_Collider_2D.png" class="" title="Add Circle Collider 2D">

<h3 id="Cinemachine-电影镜头"><a href="#Cinemachine-电影镜头" class="headerlink" title="Cinemachine / 电影镜头"></a>Cinemachine / 电影镜头</h3><h4 id="Install-Package-安装包"><a href="#Install-Package-安装包" class="headerlink" title="Install Package / 安装包"></a>Install Package / 安装包</h4><ul>
<li>Menu<ul>
<li>Window<ul>
<li>Package Manager</li>
</ul>
</li>
</ul>
</li>
<li>Packages<ul>
<li>Cinemachine: <code>Install</code></li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Cinemachine.png" class="" title="Cinemachine">

<h4 id="Create-2D-Camera-创建-2D-Camera"><a href="#Create-2D-Camera-创建-2D-Camera" class="headerlink" title="Create 2D Camera / 创建 2D Camera"></a>Create 2D Camera / 创建 2D Camera</h4><ul>
<li>Menu<ul>
<li>Cinemachine<ul>
<li>Create 2D Camera</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/2D_Camera.png" class="" title="Add 2D Camera">

<h4 id="CM-vcam1"><a href="#CM-vcam1" class="headerlink" title="CM vcam1"></a>CM vcam1</h4><ul>
<li>Inspector<ul>
<li>Cinemachine Virtual Camera(Script)<ul>
<li>Follow: <code>Player</code></li>
<li>Lens<ul>
<li>Orthographic Size: <code>7.43</code> </li>
</ul>
</li>
<li>Body<ul>
<li>Dead Zone Width: <code>0.2</code></li>
<li>Dead Zone Height: <code>0.24</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/CM_vcam.png" class="" title="Add CM vcam">

<h5 id="调整背景"><a href="#调整背景" class="headerlink" title="调整背景"></a>调整背景</h5><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>Create Empty: <code>Background</code></li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Polygon Collider 2D<ul>
<li>IsTrigger: <code>True</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Circle_Collider_2D.png" class="" title="Add Circle Collider 2D">

<h5 id="CinemaConfiner-界限，边界"><a href="#CinemaConfiner-界限，边界" class="headerlink" title="CinemaConfiner / 界限，边界"></a>CinemaConfiner / 界限，边界</h5><ul>
<li>Inspector<ul>
<li>Cinemachine Virtual Camera(Script)<ul>
<li>Add Extension<ul>
<li>CinemaConfiner</li>
</ul>
</li>
</ul>
</li>
<li>Cinemachine Confiner(Script)<ul>
<li>Bounding Shape 2D: <code>Background(Polygon Collider 2D)</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Bounding_Shape_2D.png" class="" title="Add Bounding Shape 2D">

<h3 id="Collections-收集"><a href="#Collections-收集" class="headerlink" title="Collections / 收集"></a>Collections / 收集</h3><p>cherry &amp; gem: <code>16 px</code></p>
<ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>2D Object<ul>
<li>Sprite: <code>Cherry</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Tag: <code>Collection</code></li>
<li>Sprite Renderer<ul>
<li>Sprite: <code>cherry-1</code></li>
<li>Sorting Layer: <code>Foreground</code></li>
</ul>
</li>
<li>Box Collider<ul>
<li>IsTrigger: <code>true</code></li>
</ul>
</li>
<li>Animator<ul>
<li>Controller: <code>Cherry</code><br>&lt;-</li>
</ul>
</li>
</ul>
</li>
<li>Project<ul>
<li>Assets<ul>
<li>Animation<ul>
<li>Collections<ul>
<li>Animator Controller: <code>Cherry</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Cherry_Animation.png" class="" title="Cherry Animation">

<h3 id="Bug-Fix-1"><a href="#Bug-Fix-1" class="headerlink" title="Bug Fix:"></a>Bug Fix:</h3><ul>
<li>Bug 现象<ul>
<li><code>Player</code> 方向键，粘墙(Tilemap)</li>
</ul>
</li>
<li>原因<ul>
<li><code>Player</code> 与 <code>Tilemap</code> 之间有磨擦力，不会自动滑落</li>
</ul>
</li>
<li>解决方案<ul>
<li><code>Assets</code> 添加 <code>Physics Material 2D</code>，磨擦力(Friction) 置为 <code>0</code>，添加到 <code>Player &gt; Box Collider 2D</code></li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Physics_Material_2D.png" class="" title="Physics Material 2D">

<h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>UI<ul>
<li>Canvas</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Canvas<ul>
<li>Create<ul>
<li>UI<ul>
<li>Text: <code>Cherry</code></li>
<li>Text: <code>Numbers</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Text_Archors.png" class="" title="Text Archors">

<h3 id="Enemies-敌人"><a href="#Enemies-敌人" class="headerlink" title="Enemies / 敌人"></a>Enemies / 敌人</h3><h4 id="Frog"><a href="#Frog" class="headerlink" title="Frog"></a>Frog</h4><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>Create Empty: <code>Enemies</code></li>
</ul>
</li>
<li>Enemies<ul>
<li>Create<ul>
<li>2D Object<ul>
<li>Sprite: <code>Frog</code></li>
</ul>
</li>
</ul>
</li>
<li>Frog<ul>
<li>Left: <code>Empty Object</code></li>
<li>Right: <code>Empty Object</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Tag: <code>Enemy</code></li>
<li>Sprite Renderer<ul>
<li>Sprite: <code>frog-idle-1</code></li>
</ul>
</li>
<li>Rigidbody 2D<ul>
<li>Constraints<ul>
<li>Freeze Rotation<ul>
<li>Z: <code>true</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Box Collider 2D<ul>
<li>Edit Collider</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>创建 <em>Animator Controller</em>: <strong>Frog</strong>， 拖动到 <code>Frog</code></p>
<p>创建三种状态</p>
<ol>
<li>FrogIdle</li>
<li>FrogJump</li>
<li>FrogFall</li>
</ol>
<ul>
<li>Prefabs<ul>
<li>Player</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Hurt.png" class="" title="Hurt">

<h4 id="Eagle"><a href="#Eagle" class="headerlink" title="Eagle"></a>Eagle</h4><p>从 <code>Assets</code> 中拖动 <code>eagle-attack-1</code> 到 <code>Hierarchy</code>，重命名为 <code>Eagle</code></p>
<ul>
<li>Hierarchy<ul>
<li>Eagle<ul>
<li>Top: <code>Empty Object</code></li>
<li>Bottom: <code>Empty Object</code></li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Tag: <code>Enemy</code></li>
<li>Sprite Renderer<ul>
<li>Sprite: <code>eagle-attack-1</code></li>
</ul>
</li>
<li>Rigidbody 2D<ul>
<li>Gravity Scale: <code>0</code> # 重力</li>
<li>Constraints<ul>
<li>Freeze Position<ul>
<li>X: <code>true</code></li>
</ul>
</li>
<li>Freeze Rotation<ul>
<li>Z: <code>true</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Box Collider 2D<ul>
<li>Edit Collider</li>
<li>Offset<ul>
<li>X: <code>-0.4</code></li>
<li>Y: <code>-0.4</code></li>
</ul>
</li>
<li>Radius: <code>0.5</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>创建 <em>Animator Controller</em>: <strong>Eagle</strong>， 拖动到 <code>Eagle</code></p>
<p>创建一种状态 <code>Eagle</code></p>
<ul>
<li>Prefabs<ul>
<li>Player</li>
</ul>
</li>
</ul>
<h3 id="Audio-音效"><a href="#Audio-音效" class="headerlink" title="Audio / 音效"></a>Audio / 音效</h3><ul>
<li>Audio Listener: 耳朵</li>
<li>Audio Source: 扬声器</li>
<li>Audio Clips: 音乐/声音</li>
</ul>
<h4 id="Assets"><a href="#Assets" class="headerlink" title="Assets"></a>Assets</h4><ul>
<li>Sound FX - Retro Pack</li>
<li>Casual Game BGM</li>
</ul>
<p>Player BGM / 背景音</p>
<ul>
<li>Inspector<ul>
<li>Prefab<ul>
<li>Overrides<ul>
<li>Apply All # 每个 <code>Player Prefab</code> 都包含声音</li>
</ul>
</li>
</ul>
</li>
<li>Audio Source<ul>
<li>Loop: <code>true</code></li>
<li>AudioClip: <code>BGM_01</code><br>&lt;-</li>
</ul>
</li>
</ul>
</li>
<li>Project<ul>
<li>CasualGame<ul>
<li>BGM_01</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Enemy 消灭声音</p>
<ul>
<li>Hierarchy<ul>
<li>Enemy<ul>
<li>Frog &gt;</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Audio Source Effects<ul>
<li>Play On Awake: <code>false</code></li>
<li>AudioClip: <code>hit_04</code><br>&lt;-</li>
</ul>
</li>
</ul>
</li>
<li>Project<ul>
<li>Zero Rare<ul>
<li>Retro Source<ul>
<li>Hit<ul>
<li>hit_04</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Hit.png" class="" title="Hit">

<p>其它声音</p>
<ul>
<li>跳</li>
<li>收集</li>
<li>。。。</li>
</ul>
<h3 id="Dialog-对话框"><a href="#Dialog-对话框" class="headerlink" title="Dialog / 对话框"></a>Dialog / 对话框</h3><h4 id="Assets-字体"><a href="#Assets-字体" class="headerlink" title="Assets / 字体"></a>Assets / 字体</h4><p>Font: Free Pixel Font - Thaleah</p>
<ul>
<li>Hierarchy<ul>
<li>Canves<ul>
<li>Panel: <code>Dialog</code><ul>
<li>Text</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Dialog.png" class="" title="Dialog">

<h4 id="House"><a href="#House" class="headerlink" title="House"></a>House</h4><ul>
<li>Inspector<ul>
<li>Box Collider 2D<ul>
<li>Edit Collider</li>
<li>Is Trigger: <code>true</code></li>
</ul>
</li>
<li>Enter Dialog(Script)<ul>
<li>Enter Dialog: <code>Dialog</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/House.png" class="" title="House">

<h4 id="Dialog-Animation"><a href="#Dialog-Animation" class="headerlink" title="Dialog Animation"></a>Dialog Animation</h4><ul>
<li>Project<ul>
<li>Animation<ul>
<li>Dialog<ul>
<li>Animation: <code>Dialog</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>拖动到 UI <code>Dialog</code> 上，自动生成 <code>EnterDialog</code> Animator</p>
<img src="/2019/12/11/Sunny-Land/Dialog_Animation.png" class="" title="Dialog Animation">

<h3 id="Crouch-下蹲"><a href="#Crouch-下蹲" class="headerlink" title="Crouch / 下蹲"></a>Crouch / 下蹲</h3><ul>
<li>Edit<ul>
<li>Project Settings…<ul>
<li>Input<ul>
<li>Jump<ul>
<li>Duplicate Array Element: <code>Crouch</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Porject_Settings.png" class="" title="Porject_Settings">

<ul>
<li>Crouch<ul>
<li>Positive Button: <code>s</code></li>
<li>Alt Positive Button: <code>down</code></li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/Crouch_Settings.png" class="" title="Crouch Settings">

<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Animation<ul>
<li>Player<ul>
<li>Animation: <code>Crouch</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="DeadLine-死亡"><a href="#DeadLine-死亡" class="headerlink" title="DeadLine / 死亡"></a>DeadLine / 死亡</h3><ul>
<li>Hierarchy<ul>
<li>Empty Object: <code>DeadLine</code></li>
</ul>
</li>
<li>Inspector<ul>
<li>Tag: <code>DeadLine</code></li>
<li>Transform<ul>
<li>Position<ul>
<li>Y: <code>-8.3</code></li>
</ul>
</li>
</ul>
</li>
<li>Box Collider 2D<ul>
<li>Is Trigger: <code>True</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/11/Sunny-Land/DeadLine.png" class="" title="DeadLine">

<h3 id="光效"><a href="#光效" class="headerlink" title="光效"></a>光效</h3><ul>
<li>素材的 Diffuse 材质 </li>
<li>法线贴图 Normal map</li>
<li>点光源，方向光源</li>
</ul>
<h4 id="安装-Package"><a href="#安装-Package" class="headerlink" title="安装 Package"></a>安装 Package</h4><p>Lightweight RP</p>
<ul>
<li>Level_2<ul>
<li>Grid<ul>
<li>Ground</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Tilemap Renderer<ul>
<li>Material: <code>Default-Diffuse</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>变暗</p>
<h2 id="导出游戏"><a href="#导出游戏" class="headerlink" title="导出游戏"></a>导出游戏</h2><ul>
<li>File<ul>
<li>Build Settings (Shift + Cmd + B)</li>
</ul>
</li>
</ul>
<p><img src="https://game.iosdevlog.com/2019/12/04/Bomber-Man/Build_Settings.png" alt="Build Settings"></p>
<ul>
<li>Player Settings</li>
</ul>


<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>UI 与 Game 用的是两套不同的坐标。</p>
<p>参考:</p>
<ol>
<li><a href="https://space.bilibili.com/370283072/channel/detail?cid=85776" target="_blank" rel="noopener">Unity教程 入门第一款游戏制作</a></li>
<li><a href="https://www.youtube.com/watch?v=dwcT-Dch0bA" target="_blank" rel="noopener">2D Movement in Unity (Tutorial)</a></li>
</ol>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>3D</tag>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏开发中常用的英语</title>
    <url>/2019/12/11/English/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2>

<a id="more"></a>

<table>
<thead>
<tr>
<th align="left">English</th>
<th align="left">中文</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Hierarchy</td>
<td align="left">层级视图</td>
<td align="left">树状结构展示游戏对象</td>
</tr>
<tr>
<td align="left">Scene</td>
<td align="left">场景</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Game</td>
<td align="left">游戏</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Project</td>
<td align="left">项目</td>
<td align="left">资源管理</td>
</tr>
<tr>
<td align="left">Inspector</td>
<td align="left">检查器</td>
<td align="left">属性配置</td>
</tr>
<tr>
<td align="left">Transform</td>
<td align="left">变换</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Position</td>
<td align="left">位置</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Rotation</td>
<td align="left">旋转</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Scale</td>
<td align="left">缩放</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Material</td>
<td align="left">材质</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Texture mapping</td>
<td align="left">纹理贴图</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Shader</td>
<td align="left">着色器</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Render</td>
<td align="left">渲染</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Albedo</td>
<td align="left">反照率</td>
<td align="left">一般当材质颜色</td>
</tr>
<tr>
<td align="left">Light</td>
<td align="left">光源</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Directional</td>
<td align="left">方向灯</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Spot</td>
<td align="left">聚光灯</td>
<td align="left">台灯</td>
</tr>
<tr>
<td align="left">Point</td>
<td align="left">点光源</td>
<td align="left">蜡烛</td>
</tr>
<tr>
<td align="left">Area</td>
<td align="left">区域光</td>
<td align="left">烘焙用</td>
</tr>
<tr>
<td align="left">Bake</td>
<td align="left">烘焙</td>
<td align="left">反光阴影等记录模型成新贴图，节约 CPU 资源</td>
</tr>
<tr>
<td align="left">collider</td>
<td align="left">碰撞器</td>
<td align="left">碰撞用</td>
</tr>
<tr>
<td align="left">Box Collider</td>
<td align="left">盒碰撞器</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Sphere Collider</td>
<td align="left">椭圆碰撞器</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Capsule Collider</td>
<td align="left">胶囊碰撞器</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Wheel Collider</td>
<td align="left">车轮碰撞器</td>
<td align="left">专用于车辆</td>
</tr>
<tr>
<td align="left">Mesh Collider</td>
<td align="left">网格碰撞器</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Terrain Collider</td>
<td align="left">地形碰撞器</td>
<td align="left"></td>
</tr>
</tbody></table>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>3D</tag>
        <tag>English</tag>
        <tag>Document</tag>
        <tag>2D</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexagon</title>
    <url>/2019/12/10/Hexagon/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/5.Hexagon.gif" alt="Hexagon"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="创建-2D-游戏"><a href="#创建-2D-游戏" class="headerlink" title="创建 2D 游戏"></a>创建 2D 游戏</h3><p>略</p>
<h3 id="Main-Camera"><a href="#Main-Camera" class="headerlink" title="Main Camera"></a>Main Camera</h3><ul>
<li>Inspector<ul>
<li>Camera<ul>
<li>Background: <code>red</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="New-Sprite"><a href="#New-Sprite" class="headerlink" title="New Sprite"></a>New Sprite</h3><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>Sprite: <code>Home</code></li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Transform: reset<ul>
<li>Scale<ul>
<li>Y: <code>3.8</code></li>
<li>X: <code>3.8</code></li>
</ul>
</li>
</ul>
</li>
<li>Sprite Renderer<ul>
<li>Sprite: <code>Knob</code></li>
<li>Color: <code>black</code> alpha: 40 #00000028</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Player"><a href="#Player" class="headerlink" title="Player"></a>Player</h3><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>Sprite: <code>Player</code></li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Transform: reset<ul>
<li>Position<ul>
<li>Y: <code>0.6</code></li>
</ul>
</li>
</ul>
</li>
<li>Sprite Renderer<ul>
<li>Sprite: <code>Knob</code></li>
</ul>
</li>
<li>Rigidbody 2D<ul>
<li>Body Type<ul>
<li>Kinematic</li>
</ul>
</li>
</ul>
</li>
<li>Circle Collider 2D<ul>
<li>Is Trigger: <code>True</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h3><h4 id="Player-cs"><a href="#Player-cs" class="headerlink" title="Player.cs"></a>Player.cs</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> moveSpeed = <span class="number">600f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> movement;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        movement = Input.GetAxis(<span class="string">"Horizontal"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.RotateAround(Vector3.zero, Vector3.back, movement * Time.fixedDeltaTime * moveSpeed);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/10/Hexagon/Player.png" class="" title="Player">

<h3 id="Hexagon"><a href="#Hexagon" class="headerlink" title="Hexagon"></a>Hexagon</h3><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>Effects<ul>
<li>Line: <code>Hexagon</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Position<ul>
<li>Size: <code>6</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>Index</th>
<th>X</th>
<th>Y</th>
<th>Z</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>-0.5</td>
<td>0.8</td>
<td>0</td>
</tr>
<tr>
<td>1</td>
<td>-0.95</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>-0.5</td>
<td>-0.8</td>
<td>0</td>
</tr>
<tr>
<td>3</td>
<td>0.5</td>
<td>-0.8</td>
<td>0</td>
</tr>
<tr>
<td>4</td>
<td>0.95</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>5</td>
<td>0.5</td>
<td>0.8</td>
<td>0</td>
</tr>
</tbody></table>
<img src="/2019/12/10/Hexagon/Hexagon.png" class="" title="Hexagon">

<h4 id="Collider"><a href="#Collider" class="headerlink" title="Collider"></a>Collider</h4><ul>
<li>Hierarchy<ul>
<li>Hexagon<ul>
<li>Create<ul>
<li>Empty: <code>Collider</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Edge Collider 2D<ul>
<li>Position<ul>
<li>Size: <code>6</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>Index</th>
<th>X</th>
<th>Y</th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>-0.5</td>
<td>0.8</td>
</tr>
<tr>
<td>1</td>
<td>-0.95</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>-0.5</td>
<td>-0.8</td>
</tr>
<tr>
<td>3</td>
<td>0.5</td>
<td>-0.8</td>
</tr>
<tr>
<td>4</td>
<td>0.95</td>
<td>0</td>
</tr>
<tr>
<td>5</td>
<td>0.5</td>
<td>0.8</td>
</tr>
</tbody></table>
<h3 id="Hexagon-cs"><a href="#Hexagon-cs" class="headerlink" title="Hexagon.cs"></a>Hexagon.cs</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Hexagon</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> Rigidbody2D rb;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> shrinkSpeed = <span class="number">3f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        rb.rotation = Random.Range(<span class="number">0f</span>, <span class="number">360f</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.localScale = Vector3.one * <span class="number">10f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.localScale -= Vector3.one * shrinkSpeed * Time.deltaTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (transform.localScale.x &lt; <span class="number">0.05f</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Destroy(gameObject);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="Frefabs-预置体"><a href="#Frefabs-预置体" class="headerlink" title="Frefabs / 预置体"></a>Frefabs / 预置体</h3><p>将 <code>Hexagon</code> 作成 <code>Frefabs</code></p>
<h3 id="Spawner-生成器"><a href="#Spawner-生成器" class="headerlink" title="Spawner / 生成器"></a>Spawner / 生成器</h3><ul>
<li>Hierarchy<ul>
<li>Create<ul>
<li>Empty: <code>Spawner</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Spawner</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> spawnRate = <span class="number">1f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GameObject hexoagonPrefab;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> nextTimeToSpawn;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Time.time &gt;= nextTimeToSpawn)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Instantiate(hexoagonPrefab, Vector3.zero, Quaternion.identity);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            nextTimeToSpawn = Time.time + <span class="number">1f</span> / spawnRate;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="Restart-重玩"><a href="#Restart-重玩" class="headerlink" title="Restart / 重玩"></a>Restart / 重玩</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">diff --git a/Assets/Scripts/Player.cs b/Assets/Scripts/Player.cs</span></pre></td></tr><tr><td class="code"><pre><span class="line">index 5887c5c..723bbc4 100644</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">--- a/Assets/Scripts/Player.cs</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">+++ b/Assets/Scripts/Player.cs</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">@@ -1,4 +1,5 @@</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"> &lt;U+FEFF&gt;using UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="addition">+using UnityEngine.SceneManagement;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line"> public class Player : MonoBehaviour</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">@@ -14,4 +15,9 @@ public class Player : MonoBehaviour</span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">         transform.RotateAround(Vector3.zero, Vector3.back, movement * Time.fixedDeltaTime * moveSpeed);</span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="addition">+</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="addition">+    private void OnTriggerEnter2D(Collider2D collision)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="addition">+    &#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="addition">+        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="addition">+    &#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/10/Hexagon/Edge_Collider.png" class="" title="Edge_Collider">

<h3 id="Camera-rotate"><a href="#Camera-rotate" class="headerlink" title="Camera rotate"></a>Camera rotate</h3> <figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Rotator</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.Rotate(Vector3.forward, Time.deltaTime * <span class="number">30f</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/10/Hexagon/Rotator.png" class="" title="Rotator">

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul>
<li>Dynamic</li>
<li>Static 不移动</li>
<li>kinematic 运动的, 不受重力影响</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Type Game / 打字游戏</title>
    <url>/2019/12/09/Type-Game/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/4.TypeGame.gif" alt="Type Game"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="创建-2D-3D-游戏"><a href="#创建-2D-3D-游戏" class="headerlink" title="创建 2D/3D 游戏"></a>创建 2D/3D 游戏</h3><p>创建 <code>2D 游戏</code> (TypeGame2D.sence)。</p>
<img src="/2019/12/09/Type-Game/Type_Game_2D.png" class="" title="Type Game 2D">

<p>虽然是 2D 游戏，这里也可以用 <code>3D Object</code>，其中 <code>Plane</code> 为 <code>3D &gt; Plane</code>(Gameplay.sence)。</p>
<h3 id="设置分辨率"><a href="#设置分辨率" class="headerlink" title="设置分辨率"></a>设置分辨率</h3><p>Standalone(1024x768)</p>
<p>略</p>
<h3 id="导入资源"><a href="#导入资源" class="headerlink" title="导入资源"></a>导入资源</h3><p>略</p>
<h3 id="Resources-打字游戏文本"><a href="#Resources-打字游戏文本" class="headerlink" title="Resources / 打字游戏文本"></a>Resources / 打字游戏文本</h3><p>创建新文件夹，<code>Resources</code></p>
<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Create<ul>
<li>Folder: <code>Resources</code></li>
</ul>
</li>
<li>Resources<ul>
<li>“xxx.txt”</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="BG-背景"><a href="#BG-背景" class="headerlink" title="BG / 背景"></a>BG / 背景</h3><p>拖入 <code>BG</code> 背景</p>
<h3 id="Bottom-碰撞检测"><a href="#Bottom-碰撞检测" class="headerlink" title="Bottom 碰撞检测"></a>Bottom 碰撞检测</h3><p>2D</p>
<ul>
<li>Hirearchy<ul>
<li>Create Empty: <code>Bottom</code></li>
</ul>
</li>
<li>Inspector<ul>
<li>Tag: <code>Bottom</code></li>
<li>Rect Transform<ul>
<li>Position<ul>
<li>Y: <code>-5.18</code></li>
</ul>
</li>
</ul>
</li>
<li>Box Collider 2D<ul>
<li>Is Trigger: <code>True</code></li>
<li>Size<ul>
<li>X: <code>26</code></li>
<li>Y: <code>0.15</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>3D</p>
<ul>
<li>Hirearchy<ul>
<li>Create<ul>
<li>3D<ul>
<li>Plane</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Rect Transform<ul>
<li>Position<ul>
<li>Y: <code>-6.54</code></li>
</ul>
</li>
<li>Scale<ul>
<li>X: <code>2</code></li>
<li>Y: <code>1</code></li>
<li>Z: <code>0.1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>确保能发生碰撞</p>
</blockquote>
<img src="/2019/12/09/Type-Game/Type_Game_3D.png" class="" title="Type Game 3D">

<h3 id="Scripts"><a href="#Scripts" class="headerlink" title="Scripts"></a>Scripts</h3><p>创建新文件夹，<code>Scripts</code>，脚本都是 <code>2D/3D Object</code> 通用。</p>
<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Create<ul>
<li>Folder: <code>Scripts</code></li>
</ul>
</li>
<li>Scripts<ul>
<li>Create<ul>
<li>C# Script<ul>
<li><code>WordController</code> # word 控制器</li>
<li><code>WordSwapner</code> # word 生成器</li>
<li><code>GameController</code> # UI 检测碰撞</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><code>WordController</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WordController</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> mytimer = <span class="number">1f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> gravity = <span class="number">-10f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GUISkin skin;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> position; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> showString;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> word; <span class="comment">// "Hello"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> preWord; <span class="comment">// match pre "He"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> postWord; <span class="comment">// match post "llo"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> hitColor = <span class="string">"#00ff00"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> hitChar;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> defaultColor = <span class="string">"#ffffff"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Vector3 transformPos3D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Vector2 transformPos2D;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Transform myTransform;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Camera mainCamera;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> isBlow;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> explain;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> lengthChange;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> oncecal;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        oncecal = <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        word = WordSwapner.instance.word;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        explain = WordSwapner.instance.explain;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        position = <span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        mainCamera = Camera.main;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        myTransform = <span class="keyword">this</span>.transform;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        isBlow = <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        lengthChange = word.Length * <span class="number">10</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Physics.gravity = <span class="keyword">new</span> Vector3(<span class="number">0</span>, gravity, <span class="number">0</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!isBlow)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (position == <span class="number">-1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                showString = word;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.anyKeyDown)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                position++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.A))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"a"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.B))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"b"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.C))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"c"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.D))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"d"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.E))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"e"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.F))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"f"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.G))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"g"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.H))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"h"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.I))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"i"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.J))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"j"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.K))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"k"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.L))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"l"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.M))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"m"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.N))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"n"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.O))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"o"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.P))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"p"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Q))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"q"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.R))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"r"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.S))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"s"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.T))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"t"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.U))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"u"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.V))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"v"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.W))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"w"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.X))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"x"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Y))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"y"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Z))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"z"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad0) || Input.GetKeyDown(KeyCode.Alpha0))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"0"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad1) || Input.GetKeyDown(KeyCode.Alpha1))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"1"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad2) || Input.GetKeyDown(KeyCode.Alpha2))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"2"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad3) || Input.GetKeyDown(KeyCode.Alpha3))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"3"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad4) || Input.GetKeyDown(KeyCode.Alpha4))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"4"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad5) || Input.GetKeyDown(KeyCode.Alpha5))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"5"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad6) || Input.GetKeyDown(KeyCode.Alpha6))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"6"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad7) || Input.GetKeyDown(KeyCode.Alpha7))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"7"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad8) || Input.GetKeyDown(KeyCode.Alpha8))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"8"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Keypad9) || Input.GetKeyDown(KeyCode.Alpha9))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"9"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">" "</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Minus))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"-"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Period))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"."</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Return))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                hitChar = <span class="string">"Return"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (position &lt; WordSwapner.instance.midBreak)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">                position = <span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> ((position &gt;= <span class="number">0</span>) &amp;&amp; (position &lt; word.Length))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                preWord = word.Substring(<span class="number">0</span>, position + <span class="number">1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                postWord = word.Substring(position + <span class="number">1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">if</span> (!word.Substring(position, <span class="number">1</span>).ToLower().Equals(hitChar))</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    position = <span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    WordSwapner.instance.midBreak = <span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    WordSwapner.instance.midBreak = position;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">                    showString = <span class="string">"&lt;color="</span> + hitColor + <span class="string">"&gt;"</span> + preWord + <span class="string">"&lt;/color&gt;&lt;color="</span> + defaultColor + <span class="string">"&gt;"</span> + postWord + <span class="string">"&lt;/color&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (position &gt;= word.Length - <span class="number">1</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (hitChar.Equals(<span class="string">"Return"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                WordSwapner.instance.midBreak = <span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">if</span> (!oncecal)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    lengthChange = explain.Length * <span class="number">15</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    oncecal = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                showString = <span class="string">"&lt;color=white&gt;"</span> + explain + <span class="string">"&lt;/color&gt;"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">                mytimer -= Time.deltaTime * <span class="number">2</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">if</span> (mytimer &lt;= <span class="number">0</span> &amp;&amp; !isBlow)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    isBlow = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    GameController.instance.score += <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">                    <span class="keyword">if</span> (GameController.instance.score &gt; GameController.instance.highScore)</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                        GameController.instance.highScore = GameController.instance.score;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnGUI</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        GUI.skin = skin;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transformPos3D = transform.position;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transformPos2D = mainCamera.WorldToScreenPoint(transformPos3D);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        transformPos2D = <span class="keyword">new</span> Vector2(transformPos2D.x, Screen.height - transformPos2D.y);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!isBlow)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            GUI.Box(<span class="keyword">new</span> Rect(transformPos2D.x, transformPos2D.y, lengthChange*<span class="number">3</span>, <span class="number">64</span>), showString);   </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Destroy(<span class="keyword">this</span>.gameObject, <span class="number">1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><code>WordSwapner</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WordSwapner</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> Transform wordTransform;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Transform myTransform;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> TextAsset txt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> WordSwapner instance; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span> txtLine;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> word; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> explain;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> interval; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">string</span>[] txtData;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> midBreak;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        instance = <span class="keyword">this</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        myTransform = <span class="keyword">this</span>.transform;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        txtData = txt.text.Split(<span class="string">'\n'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        interval -= Time.deltaTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (interval &lt;= <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            txtLine = txtData[Random.Range(<span class="number">0</span>, txtData.Length)];</span></pre></td></tr><tr><td class="code"><pre><span class="line">            word = txtLine.Split(<span class="string">'|'</span>)[<span class="number">0</span>].TrimEnd();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            explain = txtLine.Split(<span class="string">'|'</span>)[<span class="number">1</span>].TrimStart();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Instantiate(wordTransform, <span class="keyword">new</span> Vector3(myTransform.position.x + Random.Range(<span class="number">-4</span>, <span class="number">4</span>), myTransform.position.y, myTransform.position.z), Quaternion.identity);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            interval = <span class="number">3.5f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><code>GameController</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameController</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> life;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> GameController instance;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> score; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> highScore;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GUISkin skin;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> esc;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Time.timeScale = <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//life = 10;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        instance = <span class="keyword">this</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        highScore = PlayerPrefs.GetInt(<span class="string">"HiScore"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        esc |= Input.GetKeyDown(KeyCode.Escape);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter2D</span>(<span class="params">Collider2D collision</span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Debug.Log(<span class="string">"OnTriggerEnter2D"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (collision.CompareTag(<span class="string">"Word"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (life &gt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                life -= <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                WordSwapner.instance.midBreak = <span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                Destroy(collision.gameObject);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)        </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (other.CompareTag(<span class="string">"Word"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;   </span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (life &gt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                life -= <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                WordSwapner.instance.midBreak = <span class="number">-1</span>;   </span></pre></td></tr><tr><td class="code"><pre><span class="line">                Destroy(other.gameObject);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnGUI</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        GUI.skin = skin;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(<span class="number">20</span>, <span class="number">20</span>, <span class="number">300</span>, <span class="number">100</span>), <span class="string">"High Score: "</span> + highScore);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(Screen.width - <span class="number">220</span>, <span class="number">20</span>, <span class="number">200</span>, <span class="number">100</span>), <span class="string">"Score: "</span> + score);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(Screen.width - <span class="number">220</span>, Screen.height - <span class="number">120</span>, <span class="number">200</span>, <span class="number">100</span>), <span class="string">"Life："</span> + life);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (esc &amp;&amp; life != <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Time.timeScale = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect(Screen.width / <span class="number">2</span> - <span class="number">200</span>, Screen.height / <span class="number">2</span> - <span class="number">50</span>, <span class="number">200</span>, <span class="number">100</span>), <span class="string">"Resume"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                esc = <span class="literal">false</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                Time.timeScale = <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (life == <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            esc = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Time.timeScale = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (score &gt; highScore)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                PlayerPrefs.SetInt(<span class="string">"HiScore"</span>, highScore);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                GUI.Label(<span class="keyword">new</span> Rect(Screen.width / <span class="number">2</span> - <span class="number">200</span>, Screen.height / <span class="number">2</span> - <span class="number">300</span>, <span class="number">400</span>, <span class="number">100</span>), <span class="string">"Awesome!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect(Screen.width / <span class="number">2</span> - <span class="number">200</span>, Screen.height / <span class="number">2</span> - <span class="number">50</span>, <span class="number">400</span>, <span class="number">100</span>), <span class="string">"Restart"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                RestartGame();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (GUI.Button(<span class="keyword">new</span> Rect(Screen.width / <span class="number">2</span> - <span class="number">200</span>, Screen.height / <span class="number">2</span> + <span class="number">100</span>, <span class="number">400</span>, <span class="number">100</span>), <span class="string">"Quit"</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                Application.Quit();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">RestartGame</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        SceneManager.LoadScene(</span></pre></td></tr><tr><td class="code"><pre><span class="line">            SceneManager.GetActiveScene().name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>2D 游戏的制作可以参照之前的 <a href="https://game.iosdevlog.com/2019/12/06/Box-Tower/">《Box Tower / 堆箱塔》</a>，也可以用 3D 实现 2D 效果。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Box Tower / 堆箱塔</title>
    <url>/2019/12/06/Box-Tower/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/3.BoxTower.gif" alt="Box Tower"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="创建-2D-游戏"><a href="#创建-2D-游戏" class="headerlink" title="创建 2D 游戏"></a>创建 2D 游戏</h3><p>略</p>
<h3 id="设置分辨率-480x800"><a href="#设置分辨率-480x800" class="headerlink" title="设置分辨率 480x800"></a>设置分辨率 480x800</h3><p>略</p>
<h3 id="导入资源"><a href="#导入资源" class="headerlink" title="导入资源"></a>导入资源</h3><p>略</p>
<h3 id="Box-箱子"><a href="#Box-箱子" class="headerlink" title="Box / 箱子"></a>Box / 箱子</h3><p>从 <strong>Project</strong> 拖动 <em>Box</em> 资源到 <strong>Hierarchy</strong></p>
<ul>
<li>Inspector<ul>
<li>Rect Transform: reset(图片没有 reset)<ul>
<li>Scale<ul>
<li>X: <code>0.2</code></li>
<li>Y: <code>0.2</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/Box.png" class="" title="Box">

<h3 id="BG-背景"><a href="#BG-背景" class="headerlink" title="BG / 背景"></a>BG / 背景</h3><p>从 <strong>Project</strong> 拖动 <em>Box</em> 资源到 <strong>Hierarchy &gt; Main Camera</strong></p>


<h3 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h3><p>选中 <code>Box</code>, 添加 3 种 <code>Tag</code></p>
<ol>
<li>Box</li>
<li>Platform</li>
<li>Game Over</li>
</ol>
<img src="/2019/12/06/Box-Tower/Tags.png" class="" title="Tags">

<p>为 <code>Box</code> 添加 Tag: <em>Box</em></p>
<img src="/2019/12/06/Box-Tower/Box_Tag.png" class="" title="Box Tag">

<h3 id="添加-Box-Collider-2D"><a href="#添加-Box-Collider-2D" class="headerlink" title="添加 Box Collider 2D"></a>添加 Box Collider 2D</h3><ul>
<li>Inspector<ul>
<li>Box Collider 2D<ul>
<li>Size<ul>
<li>X: <code>4.85</code></li>
<li>Y: <code>4.85</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/Box_Collider_2D.png" class="" title="Box Collider 2D">

<h3 id="添加-RigidBody-2D"><a href="#添加-RigidBody-2D" class="headerlink" title="添加 RigidBody 2D"></a>添加 RigidBody 2D</h3><ul>
<li>Inspector<ul>
<li>RigidBody 2D<ul>
<li>Size<ul>
<li>Mess: <code>1</code></li>
<li>Linear Drag: <code>2</code></li>
<li>Angular Drag: <code>3</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/Box_RigidBody_2D.png" class="" title="Box RigidBody 2D">

<h3 id="Game-Over"><a href="#Game-Over" class="headerlink" title="Game Over"></a>Game Over</h3><ul>
<li>Hirearchy<ul>
<li>Main Camera<ul>
<li>Create Empty: <code>Game Over</code></li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Tag: <code>Game Over</code></li>
<li>Rect Transform<ul>
<li>Position<ul>
<li>Y: <code>-5.18</code></li>
</ul>
</li>
</ul>
</li>
<li>Box Collider 2D<ul>
<li>Is Trigger: <code>True</code></li>
<li>Size<ul>
<li>X: <code>26</code></li>
<li>Y: <code>0.15</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/GameOver.png" class="" title="Box Game Over">

<h3 id="Box-Spawner-箱子生成器"><a href="#Box-Spawner-箱子生成器" class="headerlink" title="Box Spawner / 箱子生成器"></a>Box Spawner / 箱子生成器</h3><ul>
<li>Hirearchy<ul>
<li>Main Camera<ul>
<li>Create Empty: <code>Box Spawner</code></li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Rect Transform<ul>
<li>Position<ul>
<li>Y: <code>3.7</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/Box_Spawner.png" class="" title="Box Box Spawner">

<h3 id="Platform-Holder"><a href="#Platform-Holder" class="headerlink" title="Platform Holder"></a>Platform Holder</h3><p>从 <strong>Project</strong> 拖动 <em>Box</em> 资源到 <strong>Hierarchy</strong>，重命名为：<code>Platform Holder</code></p>
<ul>
<li>Inspector<ul>
<li>Tag: <code>Game Over</code></li>
<li>Rect Transform<ul>
<li>Position<ul>
<li>Y: <code>-4.8</code></li>
</ul>
</li>
<li>Scale<ul>
<li>X: <code>0.7</code></li>
<li>Y: <code>0.07</code></li>
</ul>
</li>
</ul>
</li>
<li>Add Component += <code>Box Collider 2D</code></li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/Platform_Holder.png" class="" title="Box Platform Holder">

<h3 id="Prefabs"><a href="#Prefabs" class="headerlink" title="Prefabs"></a>Prefabs</h3><p>创建新文件夹，<code>Prefabs</code></p>
<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Create<ul>
<li>Folder: <code>Prefabs</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>从 <strong>Hierarchy</strong> 拖动 <em>Box</em> 到 <strong>Prefabs</strong></p>
<p>删除  <code>Hierarchy &gt; Box</code></p>
<img src="/2019/12/06/Box-Tower/Box_Prefabs.png" class="" title="Box Box Prefabs">

<h3 id="Scripts"><a href="#Scripts" class="headerlink" title="Scripts"></a>Scripts</h3><p>创建新文件夹，<code>Scripts</code></p>
<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Create<ul>
<li>Folder: <code>Scripts</code></li>
</ul>
</li>
<li>Scripts<ul>
<li>Create<ul>
<li>C# Script<ul>
<li><code>BoxScript</code></li>
<li><code>GameplayController</code></li>
<li><code>BoxSwapner</code></li>
<li><code>CameraFollow</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>附加脚本</p>
<ul>
<li>Hierarchy<ul>
<li>Main Camera += <code>CameraFollow</code><ul>
<li>Box Swapner += <code>BoxSwapner</code></li>
</ul>
</li>
<li>Create: <code>Gameplay Controller</code></li>
<li>Gameplay Controller += <code>GameplayController</code></li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/Scripts.png" class="" title="Scripts">

<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Prefabs<ul>
<li>Box -&gt; <code>Inspector</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Open Prefabs<pre><code>* Add Component += `BoxScript`</code></pre></li>
</ul>
</li>
</ul>
<img src="/2019/12/06/Box-Tower/BoxScript.png" class="" title="Box Scripts">

<h4 id="BoxSwapner-Script"><a href="#BoxSwapner-Script" class="headerlink" title="BoxSwapner Script"></a>BoxSwapner Script</h4><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BoxSwapner</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GameObject boxPrefabs;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        SwapBox();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SwapBox</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        GameObject boxObject = Instantiate(boxPrefabs);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        boxObject.transform.position = transform.position;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/06/Box-Tower/BoxSpawner_Script.png" class="" title="BoxSpawner Script">

<h3 id="Game-Controller"><a href="#Game-Controller" class="headerlink" title="Game Controller"></a>Game Controller</h3><p>删除 <em>BoxSwapner Script</em> 中的 <code>Start()</code></p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">diff --git a/Box-Tower/Assets/Scripts/BoxSwapner.cs b/Box-Tower/Assets/Scripts/BoxSwapner.cs</span></pre></td></tr><tr><td class="code"><pre><span class="line">index 66f02dc..102da62 100644</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">--- a/Box-Tower/Assets/Scripts/BoxSwapner.cs</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">+++ b/Box-Tower/Assets/Scripts/BoxSwapner.cs</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">@@ -6,11 +6,6 @@ public class BoxSwapner : MonoBehaviour</span></pre></td></tr><tr><td class="code"><pre><span class="line"> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">     public GameObject boxPrefabs;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="deletion">-    void Start()</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="deletion">-    &#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="deletion">-        SwapBox();</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="deletion">-    &#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">     public void SwapBox()</span></pre></td></tr><tr><td class="code"><pre><span class="line">     &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">         GameObject boxObject = Instantiate(boxPrefabs);</span></pre></td></tr></table></figure>

<p><code>BoxScript.cs</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BoxScript</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> minX = <span class="number">-2.2f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> maxX = <span class="number">2.2f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> canMove;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> speed = <span class="number">2f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> Rigidbody2D myBody;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> gameOver;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> ignoreCollision;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">bool</span> ignoreTrigger;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        myBody = GetComponent&lt;Rigidbody2D&gt;();</span></pre></td></tr><tr><td class="code"><pre><span class="line">        myBody.gravityScale = <span class="number">0f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        canMove = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (Random.Range(<span class="number">0</span>, <span class="number">2</span>) &gt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            speed *= <span class="number">-1f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        GameplayController.instance.currentBox = <span class="keyword">this</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// Update is called once per frame</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        MoveBox();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveBox</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (canMove)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Vector3 temp = transform.position;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            temp.x += speed * Time.deltaTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (temp.x &gt; maxX)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                speed *= <span class="number">-1f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (temp.x &lt; minX)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                speed *= <span class="number">-1f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            transform.position = temp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p><code>GameplayController.cs</code></p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameplayController</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> GameplayController instance;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> BoxSwapner boxSwapner;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    [<span class="meta">HideInInspector</span>]</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> BoxScript currentBox;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> CameraFollow cameraScript;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> moveCount;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            instance = <span class="keyword">this</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        boxSwapner.SpawnBox();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<blockquote>
<p>效果：箱子可以左右来回的移动</p>
</blockquote>
<img src="/2019/12/06/Box-Tower/PingPong.png" class="" title="Ping Pong">

<h2 id="完善代码"><a href="#完善代码" class="headerlink" title="完善代码"></a>完善代码</h2><p>具体代码请查看 <a href="https://github.com/GameDevLog/GameDevLog" target="_blank" rel="noopener">GitHub</a></p>
<img src="/2019/12/06/Box-Tower/Finish.png" class="" title="Finish">

<h2 id="导出游戏"><a href="#导出游戏" class="headerlink" title="导出游戏"></a>导出游戏</h2><ul>
<li>File<ul>
<li>Build Settings (Shift + Cmd + B)</li>
</ul>
</li>
</ul>
<p><img src="https://game.iosdevlog.com/2019/12/04/Bomber-Man/Build_Settings.png" alt="Build Settings"></p>
<ul>
<li>Player Settings</li>
</ul>
<img src="/2019/12/06/Box-Tower/Player_Settings.png" class="" title="Player Settings">

<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>两个物体 A,B 两者都有碰撞体 collider（Box Collider，Sphere Collider，Capsule Collider 等）当两物体相撞时，会进入 <code>OnTriggerEnter()</code> 和 <code>OnCollisionEnter()</code> 中的哪一个呢？</p>
<ol>
<li>只会进入一个，A 和 B 的脚本只会进入同一个</li>
<li>A 或者 B collider 有一个勾选 isTrigger 或者两者都勾选 <code>isTrigger</code> A 和 B都可以进入 <code>OnTriggerEnter()</code> 方法，但是不可进入OnCollisionEnter方法。</li>
<li>A 和 B collider 都不勾选 isTrigger，A 和 B 能进入 <code>OnCollisionEnter()</code> 方法但是不能进入 <code>OnTriggerEnter()</code> 方法。</li>
</ol>
<table>
<thead>
<tr>
<th>A isTrigger</th>
<th>B isTrigger</th>
<th>OnCollisionEnter</th>
<th>OnTriggerEnter</th>
</tr>
</thead>
<tbody><tr>
<td>✅</td>
<td>✅</td>
<td>✅</td>
<td></td>
</tr>
<tr>
<td>✅</td>
<td></td>
<td></td>
<td>✅</td>
</tr>
<tr>
<td></td>
<td>✅</td>
<td></td>
<td>✅</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>✅</td>
</tr>
</tbody></table>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Guess The Number / 猜数字</title>
    <url>/2019/12/05/Guess-The-Number/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://raw.githubusercontent.com/GameDevLog/GameDevLogTemplete/master/ScreenShots/2.GuessTheNumber.gif" alt="Guess The Number"></p>
<a id="more"></a>

<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="创建-2D-游戏"><a href="#创建-2D-游戏" class="headerlink" title="创建 2D 游戏"></a>创建 2D 游戏</h3><p>略</p>
<h3 id="设置分辨率-1280x720"><a href="#设置分辨率-1280x720" class="headerlink" title="设置分辨率 1280x720"></a>设置分辨率 1280x720</h3><img src="/2019/12/05/Guess-The-Number/Resolution.png" class="" title="Resolution">

<h3 id="InputField"><a href="#InputField" class="headerlink" title="InputField"></a>InputField</h3><ul>
<li>Hirearchy<ul>
<li>Create<ul>
<li>UI<ul>
<li>InputField</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/Create_InputField.png" class="" title="Create_InputField">

<ul>
<li>Inspector<ul>
<li>Rect Transform<ul>
<li>Width: <code>700</code></li>
<li>Height: <code>80</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/InputField.png" class="" title="InputField">

<h4 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h4><ul>
<li>Inspector<ul>
<li>Canvas<ul>
<li>Render Mode: <code>Screen Space - Camera</code></li>
<li>Render Camera: <code>Main Camera</code></li>
</ul>
</li>
<li>Canvas Scaler(Script)<ul>
<li>UI Scale Mode: <code>Scale With Screen Size</code></li>
<li>Reference Resolution<ul>
<li>X: <code>1280</code></li>
<li>Y: <code>720</code></li>
</ul>
</li>
<li>Match: <code>0.5</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/Canvas.png" class="" title="Canvas">

<h4 id="InputField-gt-Text"><a href="#InputField-gt-Text" class="headerlink" title="InputField &gt; Text"></a>InputField &gt; Text</h4><ul>
<li>Inspector<ul>
<li>Text(Script)<ul>
<li>fontSize: <code>60</code></li>
</ul>
</li>
<li>Paragraph<ul>
<li>Alignment: <code>center</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<h4 id="InputField-gt-Placeholder"><a href="#InputField-gt-Placeholder" class="headerlink" title="InputField &gt; Placeholder"></a>InputField &gt; Placeholder</h4><ul>
<li>Inspector<ul>
<li>Text(Script)<ul>
<li>Text: <code>Enter Your Guess</code></li>
</ul>
</li>
<li>Paragraph<ul>
<li>Alignment: <code>center</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/Placeholder.png" class="" title="Placeholder">

<h3 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h3><ul>
<li><p>Hirearchy</p>
<ul>
<li>Canvas<ul>
<li>Create<ul>
<li>Text</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Inspector</p>
<ul>
<li>Rect Transform<ul>
<li>Pos X: 0</li>
<li>Pos Y: <code>218</code></li>
<li>Width: <code>700</code></li>
<li>Height: <code>80</code></li>
</ul>
</li>
<li>Text(Script)<ul>
<li>Text: <code>Guess A Number Between 0 And 100</code></li>
</ul>
</li>
<li>Paragraph<ul>
<li>Alignment: <code>center</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<h4 id="Camera"><a href="#Camera" class="headerlink" title="Camera"></a>Camera</h4><ul>
<li>Inspector<ul>
<li>Camera<ul>
<li>Background: <code>Black</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/MainCamera.png" class="" title="Main Camera">

<img src="/2019/12/05/Guess-The-Number/Input.png" class="" title="Input">

<h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><ul>
<li><p>Hirearchy</p>
<ul>
<li>Canvas<ul>
<li>Create<ul>
<li>Text</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Inspector</p>
<ul>
<li>Text(Script)<ul>
<li>Text: <code>Guess</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="Button-gt-Text"><a href="#Button-gt-Text" class="headerlink" title="Button -&gt; Text"></a>Button -&gt; Text</h4><ul>
<li>Inspector<ul>
<li>Rect Transform<ul>
<li>Pos X: 0</li>
<li>Pos Y: <code>-162</code></li>
<li>Width: <code>300</code></li>
<li>Height: <code>108</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/Button.png" class="" title="Button">

<h3 id="GuessTheNumberScript"><a href="#GuessTheNumberScript" class="headerlink" title="GuessTheNumberScript"></a>GuessTheNumberScript</h3><ul>
<li>Project<ul>
<li>Create <ul>
<li>Folder: <code>Scripts</code></li>
</ul>
</li>
<li>Scripts<ul>
<li>Create<ul>
<li>C# Script: <code>GuessTheNumberScript</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/GuessTheNumberScript.png" class="" title="GuessTheNumberScript">

<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GuessTheNumberScript</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> InputField input;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> Text infoText;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> guessNumber;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> userGuessNumber;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        guessNumber = Random.Range(<span class="number">0</span>, <span class="number">100</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CheckGuess</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        userGuessNumber = <span class="keyword">int</span>.Parse(input.text);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (userGuessNumber == guessNumber)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            infoText.text = <span class="string">"You Guessed The Number! You Are A Wizard"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (userGuessNumber &gt; guessNumber)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            infoText.text = <span class="string">"Your Number Is Greater Than The Guess Number"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            infoText.text = <span class="string">"Your Number Is Lower Than The Guess Number"</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        input.text = <span class="string">""</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="GameController"><a href="#GameController" class="headerlink" title="GameController"></a>GameController</h3><ul>
<li>Hirearchy<ul>
<li>Create Empty: <code>GameController</code></li>
</ul>
</li>
</ul>
<p>添加 <code>GuessTheNumberScript</code> 到 <code>GameController</code></p>
<img src="/2019/12/05/Guess-The-Number/GameController.png" class="" title="Game Controller">

<h3 id="On-Click"><a href="#On-Click" class="headerlink" title="On Click"></a>On Click</h3><p>Button</p>
<ul>
<li>Inspector<ul>
<li>On Click()<ul>
<li>添加: <code>GameController</code><ul>
<li>选择： <code>GuessTheNumberScript.CheckGuess</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/05/Guess-The-Number/OnClick.png" class="" title="Button On Click">

<h2 id="导出游戏"><a href="#导出游戏" class="headerlink" title="导出游戏"></a>导出游戏</h2><ul>
<li>File<ul>
<li>Build Settings (Shift + Cmd + B)</li>
</ul>
</li>
</ul>
<p><img src="https://game.iosdevlog.com/2019/12/04/Bomber-Man/Build_Settings.png" alt="Build Settings"></p>
<ul>
<li>Player Settings </li>
</ul>
<img src="/2019/12/05/Guess-The-Number/Player_Settings.png" class="" title="Player Settings">

<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Bomber Man / 炸弹人</title>
    <url>/2019/12/04/Bomber-Man/</url>
    <content><![CDATA[<h2 id="游戏展示"><a href="#游戏展示" class="headerlink" title="游戏展示"></a>游戏展示</h2><p><img src="https://github.com/GameDevLog/GameDevLogTemplete/raw/master/ScreenShots/1.BomberMan.gif" alt="Bomber Man"></p>
<a id="more"></a>

<p><img src="https://github.com/GameDevLog/BomberMan/raw/master/Screenshots/BomberMan.png" alt="Bomber Man"></p>
<h2 id="游戏开发"><a href="#游戏开发" class="headerlink" title="游戏开发"></a>游戏开发</h2><h3 id="创建-BomberMan-游戏"><a href="#创建-BomberMan-游戏" class="headerlink" title="创建 BomberMan 游戏"></a>创建 <strong>BomberMan</strong> 游戏</h3><img src="/2019/12/04/Bomber-Man/CreateBomberMan.png" class="" title="CreateBomberMan">

<h3 id="导入资源"><a href="#导入资源" class="headerlink" title="导入资源"></a>导入资源</h3><p>可以从 GitHub 上面查看到。</p>
<img src="/2019/12/04/Bomber-Man/Assets_Sprites.png" class="" title="import Sprites Assets">

<h3 id="设置分辨率-400x800"><a href="#设置分辨率-400x800" class="headerlink" title="设置分辨率 400x800"></a>设置分辨率 400x800</h3><img src="/2019/12/04/Bomber-Man/Resolution_400_800.png" class="" title="Resolution 400x800">

<p>从 <code>Project &gt; Sprites</code> 中拖动 <code>BG</code> 到 <code>GamePlay</code> Scene。</p>
<h3 id="添加背景"><a href="#添加背景" class="headerlink" title="添加背景"></a>添加背景</h3><ul>
<li>BG<ul>
<li>Transform<ul>
<li>Scale<ul>
<li>X: <code>1.5</code></li>
<li>Y: <code>1.5</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/04/Bomber-Man/BackGround.png" class="" title="BackGround">

<h3 id="添加-Player"><a href="#添加-Player" class="headerlink" title="添加 Player"></a>添加 Player</h3><p>从 <code>Project &gt; Sprites</code> 中拖动 <code>Player</code> 到 <code>GamePlay</code> Scene。</p>
<ul>
<li>Player<ul>
<li>Transform<ul>
<li>Position<ul>
<li>X: <code>0</code></li>
<li>Y: <code>-3.66</code></li>
</ul>
</li>
</ul>
</li>
<li>Sprite Renderer<ul>
<li>Additional Settings<ul>
<li>Order in Layer: <code>1</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/04/Bomber-Man/Player.png" class="" title="Player">

<h4 id="给-Player-添加-Rigibody-2D"><a href="#给-Player-添加-Rigibody-2D" class="headerlink" title="给 Player 添加 Rigibody 2D"></a>给 Player 添加 Rigibody 2D</h4><ul>
<li>Player<ul>
<li>Add Component<ul>
<li>Rigibody 2D</li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/04/Bomber-Man/Rigibody_2D.png" class="" title="Rigibody 2D">

<p><code>Kinematic</code>: 运动学</p>
<p>如果该属性设置为 <code>true</code> 表示该物体运动状态不受外力，碰撞和关节的影响，而只受到动画以及附加在物体上的脚本影响，但是该物体仍然能改变其他物体运动状态</p>
<ul>
<li>Player<ul>
<li>Rigibody 2D<ul>
<li>Body Type: <code>Kinematic</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/04/Bomber-Man/Kinematic.png" class="" title="Kinematic 2D">

<h4 id="给-Player-添加-Circle-Collider-2D"><a href="#给-Player-添加-Circle-Collider-2D" class="headerlink" title="给 Player 添加 Circle Collider 2D"></a>给 Player 添加 Circle Collider 2D</h4><ul>
<li>Player<ul>
<li>Circle Collider 2D<ul>
<li>Is Trigger: <code>True</code></li>
<li>Radius: <code>0.41</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/04/Bomber-Man/Circle_Collider_2D.png" class="" title="Circle Collider 2D">

<h4 id="创建-PlayerScripts"><a href="#创建-PlayerScripts" class="headerlink" title="创建 PlayerScripts"></a>创建 PlayerScripts</h4><ul>
<li>Project<ul>
<li>Assets<ul>
<li>Create<ul>
<li>Folder: <code>Scripts</code></li>
</ul>
</li>
<li>Scripts<ul>
<li>Create</li>
<li>C# Script: <code>PlayerScript</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>添加 <code>PlayerScript</code> 到 <code>Player</code> 组件上。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerScript</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">float</span> speed = <span class="number">10f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> minX = <span class="number">-2.55f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> maxX = <span class="number">2.55f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// Update is called once per frame</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        MovePlayer();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MovePlayer</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">float</span> h = Input.GetAxis(<span class="string">"Horizontal"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        Vector2 currentPosition = transform.position;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (h &gt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">// going to the right side</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            currentPosition.x += speed * Time.deltaTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (h &lt; <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">// going to the left side</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            currentPosition.x -= speed * Time.deltaTime;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (currentPosition.x &lt; minX)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            currentPosition.x = minX;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (currentPosition.x &gt; maxX)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            currentPosition.x = maxX;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        transform.position = currentPosition;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/04/Bomber-Man/Player_Script.png" class="" title="Player Script">

<p>运行游戏，使用 <code>AWDS</code> 中的 AD 或者使用 <code>左右方向键</code> 移动</p>
<h3 id="添加-Bomb"><a href="#添加-Bomb" class="headerlink" title="添加 Bomb"></a>添加 Bomb</h3><ol>
<li>从 <code>Project &gt; Sprites</code> 中拖动 <code>Bomb</code> 到 <code>GamePlay</code> Scene。</li>
<li>添加 <code>Tag</code></li>
<li>添加 <code>Rigibody 2D</code></li>
<li>添加 <code>Circle Collider 2D</code></li>
</ol>
<ul>
<li>Bomb<ul>
<li>Tag: <code>Bomb</code></li>
<li>Transform<ul>
<li>Position<ul>
<li>X: <code>0</code></li>
<li>Y: <code>3.28</code></li>
</ul>
</li>
<li>Scale<ul>
<li>X: <code>0.8</code></li>
<li>Y: <code>0.8</code></li>
</ul>
</li>
</ul>
</li>
<li>Rigibody 2D</li>
<li>Circle Collider 2D<ul>
<li>Is Trigger: <code>True</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<img src="/2019/12/04/Bomber-Man/AddTag.png" class="" title="Add Tag">

<img src="/2019/12/04/Bomber-Man/AddBombTag.png" class="" title="Add Bomb Tag">

<img src="/2019/12/04/Bomber-Man/Bomb.png" class="" title="Bomb">

<h3 id="Prefabs-预设体"><a href="#Prefabs-预设体" class="headerlink" title="Prefabs / 预设体"></a>Prefabs / 预设体</h3><ul>
<li>Project<ul>
<li>Assets<ul>
<li>Create<ul>
<li>Folders: <code>Prefabs</code></li>
</ul>
</li>
<li>Prefabs</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>将 <code>Hirearchy &gt; GamePay &gt; Bomb</code> 拖到 <code>Prefabs</code> 中。</p>
<p>删除 <code>Hirearchy &gt; GamePay &gt; Bomb</code>。</p>
<img src="/2019/12/04/Bomber-Man/Prefabs.png" class="" title="Prefabs">

<h3 id="Spawner-生成器"><a href="#Spawner-生成器" class="headerlink" title="Spawner / 生成器"></a>Spawner / 生成器</h3><ul>
<li>Hirearchy<ul>
<li>Create Empty: <code>Spawner</code></li>
</ul>
</li>
<li>Inspector<ul>
<li>Spawner<ul>
<li>Select Icon （左上角)</li>
<li>Transform: <code>Reset</code><ul>
<li>Position<ul>
<li>X: <code>0</code></li>
<li>Y: <code>5.6</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="创建-SpawnerScripts"><a href="#创建-SpawnerScripts" class="headerlink" title="创建 SpawnerScripts"></a>创建 SpawnerScripts</h4><ul>
<li>Project<ul>
<li>Assets<ul>
<li>Scripts<ul>
<li>Create</li>
<li>C# Script: <code>SpawnerScripts</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>添加 <code>SpawnerScripts</code> 到 <code>Spawner</code> 组件上。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SpawnerScript</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> GameObject bombPrefab;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> minX = <span class="number">-2.55f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> maxX = <span class="number">2.55f</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        StartCoroutine(SpawnBombs());</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function">IEnumerator <span class="title">SpawnBombs</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">yield</span> return new <span class="title">WaitForSeconds</span>(<span class="params">Random.Range(<span class="number">0f</span>, <span class="number">1f</span></span>))</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        Instantiate(bombPrefab, <span class="keyword">new</span> Vector2(Random.Range(minX, maxX), transform.position.y),</span></pre></td></tr><tr><td class="code"><pre><span class="line">            Quaternion.identity);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        StartCoroutine(SpawnBombs());</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>将 <code>Prefabs &gt; Bomb</code> 拖动到 <code>Hierarchy &gt; Spawner</code> 上。</p>
<img src="/2019/12/04/Bomber-Man/Spawner.png" class="" title="Spawner">

<h3 id="Collector-收集器"><a href="#Collector-收集器" class="headerlink" title="Collector / 收集器"></a>Collector / 收集器</h3><ul>
<li>Hirearchy<ul>
<li>Create Empty: <code>Collector</code></li>
</ul>
</li>
<li>Inspector<ul>
<li>Collector<ul>
<li>Select Icon （左上角)</li>
<li>Transform: <code>Reset</code><ul>
<li>Position<ul>
<li>X: <code>0</code></li>
<li>Y: <code>-6.625</code></li>
</ul>
</li>
</ul>
</li>
<li>Box Collider 2D<ul>
<li>Is Trigger: <code>True</code></li>
<li>Size<ul>
<li>X: <code>7.4</code></li>
<li>Y: <code>1</code></li>
</ul>
</li>
<li>Info</li>
<li>Bounds<ul>
<li>Center<ul>
<li>X: 0</li>
<li>Y: -4.9</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="创建-CollectorScripts"><a href="#创建-CollectorScripts" class="headerlink" title="创建 CollectorScripts"></a>创建 CollectorScripts</h4><p><strong>Score Text</strong></p>
<ul>
<li>Hirearchy<ul>
<li>Create<ul>
<li>UI<ul>
<li>Text</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Inspector<ul>
<li>Rect Transform<ul>
<li>Archors<ul>
<li>top</li>
<li>left</li>
</ul>
</li>
<li>Pos X: <code>125.5</code></li>
<li>Pos Y: <code>125.5</code></li>
<li>Width: <code>224</code></li>
<li>Height: <code>50</code></li>
</ul>
</li>
<li>Text(Script)<ul>
<li>Text: <code>Score: 0</code></li>
<li>Character<ul>
<li>Font Size: <code>36</code></li>
</ul>
</li>
<li>Paragraph<ul>
<li>V: <code>Center</code></li>
</ul>
</li>
<li>Color: <code>White</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<ul>
<li>Project<ul>
<li>Assets<ul>
<li>Scripts<ul>
<li>Create</li>
<li>C# Script: <code>CollectorScripts</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>添加 <code>CollectorScripts</code> 到 <code>Collector</code> 组件上。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CollectorScript</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> Text scoreText;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> score;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter2D</span>(<span class="params">Collider2D collision</span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (collision.tag == <span class="string">"Bomb"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            IncreaseScore();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            collision.gameObject.SetActive(<span class="literal">false</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">IncreaseScore</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        score++;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        scoreText.text = <span class="string">"Score: "</span> + score;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<img src="/2019/12/04/Bomber-Man/Collector.png" class="" title="Collector">

<h3 id="重置游戏"><a href="#重置游戏" class="headerlink" title="重置游戏"></a>重置游戏</h3><p><code>Score Text</code>:</p>
<ul>
<li><p>Inspector</p>
<ul>
<li>Rect Transform<ul>
<li>Pos X: <code>180</code></li>
<li>Pos Y: <code>-60</code></li>
<li>Width: <code>300</code></li>
<li>Height: <code>100</code></li>
</ul>
</li>
<li>Text(Script)<ul>
<li>Text: <code>High Score: 0\nScore: 0</code></li>
</ul>
</li>
</ul>
</li>
<li><p>修改 <code>CollectorScripts</code> 代码。</p>
</li>
</ul>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CollectorScript</span> : <span class="title">MonoBehaviour</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">public</span> Text scoreText;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> score;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> highScore;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        DisplayScore();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter2D</span>(<span class="params">Collider2D collision</span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (collision.tag == <span class="string">"Bomb"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            IncreaseScore();</span></pre></td></tr><tr><td class="code"><pre><span class="line">            collision.gameObject.SetActive(<span class="literal">false</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">DisplayScore</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        scoreText.text = <span class="string">"High Score: "</span> + highScore + <span class="string">"\nScore: "</span> + score;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">IncreaseScore</span>(<span class="params"></span>)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        score++;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (score &gt; highScore)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            highScore = score;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">        DisplayScore();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h2 id="导出游戏"><a href="#导出游戏" class="headerlink" title="导出游戏"></a>导出游戏</h2><ul>
<li>File<ul>
<li>Build Settings (Shift + Cmd + B)</li>
</ul>
</li>
</ul>
<img src="/2019/12/04/Bomber-Man/Build_Settings.png" class="" title="Build Settings">

<ul>
<li>Player Settings <img src="/2019/12/04/Bomber-Man/Player_Settings.png" class="" title="Player Settings">

</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Basic</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Game code Github Templete</title>
    <url>/2019/12/03/Templete/</url>
    <content><![CDATA[<h2 id="Unity-的-gitignore-设置"><a href="#Unity-的-gitignore-设置" class="headerlink" title="Unity 的 .gitignore 设置"></a>Unity 的 <code>.gitignore</code> 设置</h2><p>新建 GiHub 仓库：<a href="http://github.com/new" target="_blank" rel="noopener">http://github.com/new</a></p>
<img src="/2019/12/03/Templete/GameDevLogTemplete.png" class="" title="[GameDevLogTemplete]">

<a id="more"></a>

<h2 id="配置-Unity-以进行版本控制"><a href="#配置-Unity-以进行版本控制" class="headerlink" title="配置 Unity 以进行版本控制"></a>配置 Unity 以进行版本控制</h2><ul>
<li>打开编辑器设置窗口。<ul>
<li><code>Edit &gt; Project Settings &gt; Editor</code></li>
</ul>
</li>
<li>使<code>.meta</code>文件可见，以避免损坏的对象引用。<ul>
<li><code>Version Control / Mode: “Visible Meta Files”</code></li>
</ul>
</li>
<li>使用纯文本序列化可以避免无法解决的合并冲突。<ul>
<li><code>Asset Serialization / Mode: “Force Text”</code></li>
</ul>
</li>
<li>保存您的更改。<ul>
<li><code>File &gt; Save Project</code></li>
</ul>
</li>
</ul>
<h2 id="使用-Git-大文件存储"><a href="#使用-Git-大文件存储" class="headerlink" title="使用 Git 大文件存储"></a>使用 Git 大文件存储</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 3D models</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.3dm filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.3ds filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.blend filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.c4d filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.collada filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.dae filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.dxf filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.fbx filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.jas filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.lws filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.lxo filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.ma filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.max filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.mb filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.obj filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.ply filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.skp filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.stl filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.ztl filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"># Audio</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.aif filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.aiff filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.it filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.mod filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.mp3 filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.ogg filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.s3m filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.wav filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.xm filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"># Fonts</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.otf filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.ttf filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"># Images</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.bmp filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.exr filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.gif filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.hdr filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.iff filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.jpeg filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.jpg filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.pict filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.png filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.psd filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.tga filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.tif filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.tiff filter&#x3D;lfs diff&#x3D;lfs merge&#x3D;lfs -text</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"># Collapse Unity-generated files on GitHub</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.asset linguist-generated</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.mat linguist-generated</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.meta linguist-generated</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.prefab linguist-generated</span></pre></td></tr><tr><td class="code"><pre><span class="line">*.unity linguist-generated</span></pre></td></tr></table></figure>

<h2 id="Commit-规范和格式化"><a href="#Commit-规范和格式化" class="headerlink" title="Commit 规范和格式化"></a>Commit 规范和格式化</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install -g commitizen cz-conventional-changelog</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'&#123; "path": "cz-conventional-changelog" &#125;'</span> &gt; ~/.czrc</span></pre></td></tr></table></figure>

<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><p>Release: <a href="https://github.com/GameDevLog/GameDevLogTemplete/releases" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete/releases</a></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>GitHub: <a href="https://github.com/GameDevLog/GameDevLogTemplete" target="_blank" rel="noopener">https://github.com/GameDevLog/GameDevLogTemplete</a></p>
]]></content>
      <categories>
        <category>Unity</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Templete</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<a id="more"></a>

<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
